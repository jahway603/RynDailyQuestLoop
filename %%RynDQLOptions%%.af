~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~																						
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.	
~~		Get metaf here: https://github.com/JJEII/metaf/									
~~																						
~~ All recognized structural designators:												
~~		STATE:				DO:															
~~		IF:					NAV:														
~~																						
~~ All recognized CONDITION (IF:) operation keywords:									
~~		Never				NavEmpty			MobsInDist_Priority		Not				
~~		Always				Death				NeedToBuff				PSecsInStateGE	
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE	
~~		Any					VendorClosed		BlockE					BuPercentGE		
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE		
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr			
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture		
~~																						
~~ All recognized ACTION (DO:) operation keywords:										
~~		None				EmbedNav			ChatExpr				SetOpt			
~~		SetState			CallState			SetWatchdog				CreateView		
~~		Chat				Return				ClearWatchdog			DestroyView		
~~		DoAll				DoExpr				GetOpt					DestroyAllViews	
~~																						
~~ All recognized NAV types:															
~~		circular			follow														
~~		linear				once														
~~																						
~~ All recognized NAV NODE types:														
~~		flw					vnd															
~~		pnt					ptl															
~~		rcl					tlk															
~~		pau					chk															
~~		cht					jmp															
~~		prt (deprecated in VTank)														
~~ }																					

STATE: {%% Options %%} ~~ {
	IF:	Never
		DO:	Chat {%%% Enable Options %%%}
	IF:	ChatMatch {%% Count Phainor Toggles %%}
		DO:	None
	IF:	Never
		DO:	DoExpr {setpvar[RouteTogglePhainor,UseBot]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteTogglePhainor,SummonPortal]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteTogglePhainor,Run]}
	IF:	ChatMatch {%% DeathsAllure Toggles %%}
		DO:	None
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleDeathsAllure,UseBot]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleDeathsAllure,SummonPortal]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleDeathsAllure,Run]}
	IF:	ChatMatch {%% NexusCrawl Toggles %%}
		DO:	None
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleNexusCrawl,UseBot]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleNexusCrawl,SummonPortal]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleNexusCrawl,Run]}
	IF:	ChatMatch {%% ProdigalBanderling Toggles %%}
		DO:	None
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleProdigalBanderling,UseBot]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleProdigalBanderling,SummonPortal]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleProdigalBanderling,Run]}
	IF:	ChatMatch {%% PurgingTheCorruption Toggles %%}
		DO:	None
	IF:	Never
		DO:	DoExpr {setpvar[RouteTogglePurgingTheCorruption,UseBot]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteTogglePurgingTheCorruption,SummonPortal]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteTogglePurgingTheCorruption,Run]}
	IF:	ChatMatch {%% SplittingGrael Toggles %%}
		DO:	None
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleSplittingGrael,UseBot]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleSplittingGrael,SummonPortal]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleSplittingGrael,Run]}
	IF:	ChatMatch {%% UnleashTheGearknight Toggles %%}
		DO:	None
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleUGK,UseBot]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleUGK,SummonPortal]}
	IF:	Never
		DO:	DoExpr {setpvar[RouteToggleUGK,Run]}
	IF:	Never
		DO:	DoExpr {setpvar[LSRecall,1]}
	IF:	Never
		DO:	DoExpr {setpvar[TuskerSecondary,1]}
	IF:	Never
		DO:	Chat {%%% Edit Fellow Count %%%}
	IF:	Any
			Expr {testpvar[FellowCount]==0}
			Expr {getpvar[FellowCount]==Number}
		DO:	DoExpr {setpvar[FellowCount,Number]}
	IF:	Never
		DO:	Chat {%%% Edit Names Below %%%}
	IF:	Any
			Expr {testpvar[LeaderName]==0}
			Expr {getpvar[LeaderName]==CharOne}
		DO:	DoExpr {setpvar[LeaderName,`CharOne`]}
	IF:	Any
			Expr {testpvar[FellowNameTwo]==0}
			Expr {getpvar[FellowNameTwo]==CharTwo}
		DO:	DoExpr {setpvar[FellowNameTwo,`CharTwo`]}
	IF:	Any
			Expr {testpvar[FellowNameThree]==0}
			Expr {getpvar[FellowNameThree]==CharThree}
		DO:	DoExpr {setpvar[FellowNameThree,`CharThree`]}
	IF:	Any
			Expr {testpvar[FellowNameFour]==0}
			Expr {getpvar[FellowNameFour]==CharFour}
		DO:	DoExpr {setpvar[FellowNameFour,`CharFour`]}
	IF:	Any
			Expr {testpvar[FellowNameFive]==0}
			Expr {getpvar[FellowNameFive]==CharFive}
		DO:	DoExpr {setpvar[FellowNameFive,`CharFive`]}
	IF:	Any
			Expr {testpvar[FellowNameSix]==0}
			Expr {getpvar[FellowNameSix]==CharSix}
		DO:	DoExpr {setpvar[FellowNameSix,`CharSix`]}
	IF:	Any
			Expr {testpvar[FellowNameSeven]==0}
			Expr {getpvar[FellowNameSeven]==CharSeven}
		DO:	DoExpr {setpvar[FellowNameSeven,`CharSeven`]}
	IF:	Any
			Expr {testpvar[FellowNameEight]==0}
			Expr {getpvar[FellowNameEight]==CharEight}
		DO:	DoExpr {setpvar[FellowNameEight,`CharEight`]}
	IF:	Any
			Expr {testpvar[FellowNameNine]==0}
			Expr {getpvar[FellowNameNine]==CharNine}
		DO:	DoExpr {setpvar[FellowNameNine,`CharNine`]}
	IF:	Never
		DO:	Chat {%%% Edit Bot Count %%%}
	IF:	Expr {testpvar[BotCount]==0}
		DO:	DoExpr {setpvar[BotCount,11]}
	IF:	Never
		DO:	Chat {%%% Bot Names Below %%%}
	IF:	Expr {getpvar[UseBot]==1}
		DO:	DoExpr {setpvar[BotName,listcreate[]]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameOne]==0}
		DO:	DoExpr {setpvar[BotNameOne,Brycter's Portal Bot I]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameTwo]==0}
		DO:	DoExpr {setpvar[BotNameTwo,Brycter's Portal Bot II]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameThree]==0}
		DO:	DoExpr {setpvar[BotNameThree,Brycter's Portal Bot III]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameFour]==0}
		DO:	DoExpr {setpvar[BotNameFour,Brycter's Portal Bot IV]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameFive]==0}
		DO:	DoExpr {setpvar[BotNameFive,Brycter's Portal Bot V]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameSix]==0}
		DO:	DoExpr {setpvar[BotNameSix,Brycter's Portal Bot VI]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameSeven]==0}
		DO:	DoExpr {setpvar[BotNameSeven,Brycter's Portal Bot VII]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameEight]==0}
		DO:	DoExpr {setpvar[BotNameEight,Brycter's Portal Bot VIII]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameNine]==0}
		DO:	DoExpr {setpvar[BotNameNine,Brycter's Portal Bot IX]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameTen]==0}
		DO:	DoExpr {setpvar[BotNameTen,Brycter's Portal Bot X]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotNameEleven]==0}
		DO:	DoExpr {setpvar[BotNameEleven,Brycter's Portal Bot XI]}
	IF:	Never
		DO:	Chat {%%% BotKeywords Below %%%}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[QuestKeyWordCountPhainor]==0}
		DO:	DoExpr {setpvar[QuestKeyWordCountPhainor,cp]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[QuestKeyWordDeathsAllure]==0}
		DO:	DoExpr {setpvar[QuestKeyWordDeathsAllure,da]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[QuestKeyWordNexusCrawl]==0}
		DO:	DoExpr {setpvar[QuestKeyWordNexusCrawl,nc]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[QuestKeyWordProdigalBanderling]==0}
		DO:	DoExpr {setpvar[QuestKeyWordProdigalBanderling,ab]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[QuestKeyWordPurgingTheCorruption]==0}
		DO:	DoExpr {setpvar[QuestKeyWordPurgingTheCorruption,tc]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[QuestKeyWordSplittingGrael]==0}
		DO:	DoExpr {setpvar[QuestKeyWordSplittingGrael,ab]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[QuestKeyWordUnleashTheGearknight]==0}
		DO:	DoExpr {setpvar[QuestKeyWordUnleashTheGearknight,utg]}
	IF:	Never
		DO:	Chat {%% Summon Names Below %%}
	IF:	Never
		DO:	Chat {Optional tie to Dark Bobo as secondary to save time on that quest with all characters.}
	IF:	All
			Expr {getpvar[SummonPortal]==1}
			Any
				Expr {testpvar[UGKSummon]==0}
				Expr {testpvar[UGKSummon]==CharOne}
		DO:	DoExpr {setpvar[UGKSummon,CharOne]}
	IF:	All
			Expr {getpvar[SummonPortal]==1}
			Any
				Expr {testpvar[SplittingGraelSummon]==0}
				Expr {testpvar[SplittingGraelSummon]==CharTwo}
		DO:	DoExpr {setpvar[SplittingGraelSummon,CharTwo]}
	IF:	All
			Expr {getpvar[SummonPortal]==1}
			Any
				Expr {testpvar[PurgingTheCorruptionSummon]==0}
				Expr {testpvar[PurgingTheCorruptionSummon]==CharThree}
		DO:	DoExpr {setpvar[PurgingTheCorruptionSummon,CharThree]}
	IF:	All
			Expr {getpvar[SummonPortal]==1}
			Any
				Expr {testpvar[ProdigalBanderlingSummon]==0}
				Expr {testpvar[ProdigalBanderlingSummon]==CharFour}
		DO:	DoExpr {setpvar[ProdigalBanderlingSummon,CharFour]}
	IF:	All
			Expr {getpvar[SummonPortal]==1}
			Any
				Expr {testpvar[NexusCrawlSummon]==0}
				Expr {testpvar[NexusCrawlSummon]==CharFive}
		DO:	DoExpr {setpvar[NexusCrawlSummon,CharFive]}
	IF:	All
			Expr {getpvar[SummonPortal]==1}
			Any
				Expr {testpvar[DeathsAllureSummon]==0}
				Expr {testpvar[DeathsAllureSummon]==CharSix}
		DO:	DoExpr {setpvar[DeathsAllureSummon,CharSix]}
	IF:	All
			Expr {getpvar[SummonPortal]==1}
			Any
				Expr {testpvar[CountPhainorSummon]==0}
				Expr {testpvar[CountPhainorSummon]==CharTwo}
		DO:	DoExpr {setpvar[CountPhainorSummon,CharTwo]}
	IF:	Never
		DO:	Chat {%% Summon Toggles Below %%}
	IF:	Never
		DO:	Chat {%% Disabled By Default %%}
	IF:	Never
		DO:	Chat {%% Set to 1 to Enable %%}
	IF:	Never
		DO:	Chat {%% Set to 0 to Disable %%}
	IF: Always
		DO: DoExpr {setpvar[SummonForBosses,0]}
	IF: Always
		DO: DoExpr {setpvar[SummonAllTheTime,0]}
	IF:	Never
		DO:	Chat {%% Quest Toggles Below %%}
	IF:	Never
		DO:	Chat {%% Set to 1 to run the quest %%}
	IF:	Never
		DO:	Chat {%% Set to 0 to skip the quest %%}
	IF: Always
		DO: DoAll
				DoExpr {setpvar[DoQuestMouf,1]} ~~ 150
				DoExpr {setpvar[DoDR,1]} ~~ 180
				DoExpr {setpvar[DoQuestUnleashTheGearknight,1]} ~~ 150
				DoExpr {setpvar[DoQuestProdigalBanderling,1]} ~~ 120
				DoExpr {setpvar[DoQuestLostLore,1]} ~~ 150
				DoExpr {setpvar[DoQuestFalatacotDepot,1]} ~~ 150
				DoExpr {setpvar[DoQuestProdigalTusker,1]} ~~ 130
				DoExpr {setpvar[DoQuestIQSQ,1]} ~~ 130
				DoExpr {setpvar[DoQuestGrael,1]} ~~ 150
				DoExpr {setpvar[DoQuestVR,1]} ~~ 150
				DoExpr {setpvar[DoQuestNexus,1]} ~~ 150
				DoExpr {setpvar[DoQuestHermit,1]} ~~ 175
				DoExpr {setpvar[DoQuestDR,1]} ~~ 180
				DoExpr {setpvar[DoQuestAF,1]} ~~ 150
				DoExpr {setpvar[DoQuestPurge,1]} ~~ 180
				DoExpr {setpvar[DoQuestGX,1]} ~~ 0 but 150
				DoExpr {setpvar[DoQuestDee,1]} ~~ 180
				DoExpr {setpvar[DoQuestLugianAssault,1]} ~~ 180
				DoExpr {setpvar[DoQuestReleasingTheLight,1]} ~~ 150
				DoExpr {setpvar[DoQuestSaveKarul,1]} ~~ 200
				DoExpr {setpvar[DoQuestBSI,1]} ~~ 200
				DoExpr {setpvar[DoQuestHaltDericost,1]} ~~ 200
				DoExpr {setpvar[DoQuestGeraineStudy,1]} ~~ 150 setting to 180 though
				DoExpr {setpvar[DoQuestLU,1]} ~~ 180
				DoExpr {setpvar[DoQuestCP,1]} ~~ 180
				DoExpr {setpvar[DoQuestSBG,1]} ~~ 150
				DoExpr {setpvar[DoQuestEOD,1]} ~~ 180
				DoExpr {setpvar[DoQuestRynthidWeapon,0]} ~~ 180
	IF:	Never
		DO:	Chat {%% Clear At End Toggles Below %%}
	IF:	Never
		DO:	Chat {%% Set to 1 to Not Clear Options %%}
	IF:	Never
		DO:	Chat {%% Set to 0 to Clear Options %%}
	IF: Always
		DO: DoExpr {setpvar[DoNotClearOptionsAtEnd,0]}
	IF:	Never
		DO:	Chat {%% Do Not Edit Below Here %%}
	IF:	Never
		DO:	Chat {%% Do Not Edit Below Here %%}
	IF:	Never
		DO:	Chat {%% Do Not Edit Below Here %%}
	IF:	Never
		DO:	Chat {%% Do Not Edit Below Here %%}
	IF:	Never
		DO:	Chat {%% Do Not Edit Below Here %%}
	IF:	Never
		DO:	Chat {%% Do Not Edit Below Here %%}
	IF:	Never
		DO:	Chat {%% Do Not Edit Below Here %%}
	IF:	Never
		DO:	Chat {%% Do Not Edit Below Here %%}
	IF:	Any
			Expr {getpvar[RouteTogglePhainor]==`UseBot`}
			Expr {getpvar[RouteToggleDeathsAllure]==`UseBot`}
			Expr {getpvar[RouteToggleNexusCrawl]==`UseBot`}
			Expr {getpvar[RouteToggleProdigalBanderling]==`UseBot`}
			Expr {getpvar[RouteTogglePurgingTheCorruption]==`UseBot`}
			Expr {getpvar[RouteToggleSplittingGrael]==`UseBot`}
			Expr {getpvar[RouteToggleUGK]==`UseBot`}
		DO:	DoExpr {setpvar[UseBot,1]}
	IF:	Any
			Expr {getpvar[RouteTogglePhainor]==`SummonPortal`}
			Expr {getpvar[RouteToggleDeathsAllure]==`SummonPortal`}
			Expr {getpvar[RouteToggleNexusCrawl]==`SummonPortal`}
			Expr {getpvar[RouteToggleProdigalBanderling]==`SummonPortal`}
			Expr {getpvar[RouteTogglePurgingTheCorruption]==`SummonPortal`}
			Expr {getpvar[RouteToggleSplittingGrael]==`SummonPortal`}
			Expr {getpvar[RouteToggleUGK]==`SummonPortal`}
		DO:	DoExpr {setpvar[SummonPortal,1]}
	IF:	Any
			Expr {getpvar[RouteTogglePhainor]==`Run`}
			Expr {getpvar[RouteToggleDeathsAllure]==`Run`}
			Expr {getpvar[RouteToggleNexusCrawl]==`Run`}
			Expr {getpvar[RouteToggleProdigalBanderling]==`Run`}
			Expr {getpvar[RouteTogglePurgingTheCorruption]==`Run`}
			Expr {getpvar[RouteToggleSplittingGrael]==`Run`}
			Expr {getpvar[RouteToggleUGK]==`Run`}
		DO:	DoExpr {setpvar[Run,1]}
	IF: Not Expr {uboptget[`Networking.Tags`]#DailyLoop+getworldname[]+getpvar[GroupIdentifier]}
		DO: ChatExpr {\/ub opt set Networking\.Tags add DailyLoop+getworldname[]+getpvar[GroupIdentifier]}
	IF:	All
			Expr {getpvar[UseBot]==1}
			Expr {testpvar[BotName]}
			Expr {listcount[getpvar[BotName]]<getpvar[BotCount]}
		DO:	DoExpr {setpvar[BotName,listcreate[getpvar[BotNameOne],getpvar[BotNameTwo],getpvar[BotNameThree],getpvar[BotNameFour],getpvar[BotNameFive],getpvar[BotNameSix],getpvar[BotNameSeven],getpvar[BotNameEight],getpvar[BotNameNine],getpvar[BotNameTen],getpvar[BotNameEleven]]]}
	IF:	All
			Expr {testpvar[LeaderName]}
			Expr {testpvar[FellowCount]}
			Expr {getvar[ReloadOptions]>=3}
			Any
				Expr {getpvar[FellowCount]==2&&testpvar[FellowNameTwo]==1}
				Expr {getpvar[FellowCount]==3&&testpvar[FellowNameTwo]==1&&testpvar[FellowNameThree]==1}
				Expr {getpvar[FellowCount]==4&&testpvar[FellowNameTwo]==1&&testpvar[FellowNameThree]==1&&testpvar[FellowNameFour]==1}
				Expr {getpvar[FellowCount]==5&&testpvar[FellowNameTwo]==1&&testpvar[FellowNameThree]==1&&testpvar[FellowNameFour]==1&&testpvar[FellowNameFive]==1}
				Expr {getpvar[FellowCount]==6&&testpvar[FellowNameTwo]==1&&testpvar[FellowNameThree]==1&&testpvar[FellowNameFour]==1&&testpvar[FellowNameFive]==1&&testpvar[FellowNameSix]==1}
				Expr {getpvar[FellowCount]==7&&testpvar[FellowNameTwo]==1&&testpvar[FellowNameThree]==1&&testpvar[FellowNameFour]==1&&testpvar[FellowNameFive]==1&&testpvar[FellowNameSix]==1&&testpvar[FellowNameSeven]==1}
				Expr {getpvar[FellowCount]==8&&testpvar[FellowNameTwo]==1&&testpvar[FellowNameThree]==1&&testpvar[FellowNameFour]==1&&testpvar[FellowNameFive]==1&&testpvar[FellowNameSix]==1&&testpvar[FellowNameSeven]==1&&testpvar[FellowNameEight]==1}
				Expr {getpvar[FellowCount]==9&&testpvar[FellowNameTwo]==1&&testpvar[FellowNameThree]==1&&testpvar[FellowNameFour]==1&&testpvar[FellowNameFive]==1&&testpvar[FellowNameSix]==1&&testpvar[FellowNameSeven]==1&&testpvar[FellowNameEight]==1&&testpvar[FellowNameNine]==1}
			Any
				Expr {getpvar[SummonPortal]==0}
				All
					Expr {getpvar[SummonPortal]==1}
					Any
						Expr {testpvar[UGKSummon]==1}
						Expr {testpvar[SplittingGraelSummon]==1}
						Expr {testpvar[PurgingTheCorruptionSummon]==1}
						Expr {testpvar[ProdigalBanderlingSummon]==1}
						Expr {testpvar[NexusCrawlSummon]==1}
						Expr {testpvar[DeathsAllureSummon]==1}
						Expr {testpvar[CountPhainorSummon]==1}
			Any
				Expr {getpvar[UseBot]==0}
				All
					Expr {getpvar[UseBot]==1}
					Any
						Expr {testpvar[BotName]==1}
						Expr {testpvar[QuestKeyWordCountPhainor]==1}
						Expr {testpvar[QuestKeyWordDeathsAllure]==1}
						Expr {testpvar[QuestKeyWordNexusCrawl]==1}
						Expr {testpvar[QuestKeyWordProdigalBanderling]==1}
						Expr {testpvar[QuestKeyWordPurgingTheCorruption]==1}
						Expr {testpvar[QuestKeyWordSplittingGrael]==1}
						Expr {testpvar[QuestKeyWordUnleashTheGearknight]==1}
		DO:	DoExpr {setpvar[Options,1]}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[UseBot]==1}
			Expr {listcount[getpvar[BotName]]<getpvar[BotCount]}
		DO:	DoExpr {setpvar[BotName,listcreate[getpvar[BotNameOne],getpvar[BotNameTwo],getpvar[BotNameThree],getpvar[BotNameFour],getpvar[BotNameFive],getpvar[BotNameSix],getpvar[BotNameSeven],getpvar[BotNameEight],getpvar[BotNameNine],getpvar[BotNameTen],getpvar[BotNameEleven]]]}
	IF: Expr {getvar[ReloadOptions]<3}
		DO: DoAll
				DoExpr {setvar[ReloadOptions,getvar[ReloadOptions]+1]}
				SetState {%% Options %%}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]==`Number`}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowCount from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[LeaderName]==CharOne}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed LeaderName from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]>=2}
			Expr {getpvar[FellowNameTwo]==CharTwo}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowNameTwo from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]>=3}
			Expr {getpvar[FellowNameThree]==CharThree}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowNameThree from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]>=4}
			Expr {getpvar[FellowNameFour]==CharFour}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowNameFour from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]>=5}
			Expr {getpvar[FellowNameFive]==CharFive}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowNameFive from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]>=6}
			Expr {getpvar[FellowNameSix]==CharSix}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowNameSix from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]>=7}
			Expr {getpvar[FellowNameSeven]==CharSeven}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowNameSeven from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]>=8}
			Expr {getpvar[FellowNameEight]==CharEight}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowNameEight from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[FellowCount]>=9}
			Expr {getpvar[FellowNameNine]==CharNine}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed FellowNameNine from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[UseBot]==1&&getpvar[RouteTogglePhainor]==`UseBot`}
			Expr {getpvar[QuestKeyWordCountPhainor]==QuestKeyWordCountPhainor}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed QuestKeyWordCountPhainor from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[UseBot]==1&&getpvar[RouteToggleDeathsAllure]==`UseBot`}
			Expr {getpvar[QuestKeyWordDeathsAllure]==QuestKeyWordDeathsAllure}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed QuestKeyWordDeathsAllure from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[UseBot]==1&&getpvar[RouteToggleNexusCrawl]==`UseBot`}
			Expr {getpvar[QuestKeyWordNexusCrawl]==QuestKeyWordNexusCrawl}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed QuestKeyWordNexusCrawl from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[UseBot]==1&&getpvar[RouteToggleProdigalBanderling]==`UseBot`}
			Expr {getpvar[QuestKeyWordProdigalBanderling]==QuestKeyWordProdigalBanderling}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed QuestKeyWordProdigalBanderling from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[UseBot]==1&&getpvar[RouteTogglePurgingTheCorruption]==`UseBot`}
			Expr {getpvar[QuestKeyWordPurgingTheCorruption]==QuestKeyWordPurgingTheCorruption}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed QuestKeyWordPurgingTheCorruption from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[UseBot]==1&&getpvar[RouteToggleSplittingGrael]==`UseBot`}
			Expr {getpvar[QuestKeyWordSplittingGrael]==QuestKeyWordSplittingGrael}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed QuestKeyWordSplittingGrael from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[UseBot]==1&&getpvar[RouteToggleUGK]==`UseBot`}
			Expr {getpvar[QuestKeyWordUnleashTheGearknight]==QuestKeyWordUnleashTheGearknight}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed QuestKeyWordUnleashTheGearknight from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[SummonPortal]==1&&getpvar[RouteToggleUGK]==`SummonPortal`}
			Expr {getpvar[UGKSummon]==CharOne}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed UGKSummon from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[SummonPortal]==1&&getpvar[RouteToggleSplittingGrael]==`SummonPortal`}
			Expr {getpvar[SplittingGraelSummon]==CharTwo}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed SplittingGraelSummon from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[SummonPortal]==1&&getpvar[RouteTogglePurgingTheCorruption]==`SummonPortal`}
			Expr {getpvar[PurgingTheCorruptionSummon]==CharThree}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed PurgingTheCorruptionSummon from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[SummonPortal]==1&&getpvar[RouteToggleProdigalBanderling]==`SummonPortal`}
			Expr {getpvar[ProdigalBanderlingSummon]==CharTwo}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed ProdigalBanderlingSummon from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[SummonPortal]==1&&getpvar[RouteToggleNexusCrawl]==`SummonPortal`}
			Expr {getpvar[NexusCrawlSummon]==CharFour}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed NexusCrawlSummon from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[SummonPortal]==1&&getpvar[RouteToggleDeathsAllure]==`SummonPortal`}
			Expr {getpvar[DeathsAllureSummon]==CharFive}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed DeathsAllureSummon from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			Expr {getpvar[Options]==1}
			Expr {getpvar[SummonPortal]==1&&getpvar[RouteTogglePhainor]==`SummonPortal`}
			Expr {getpvar[CountPhainorSummon]==CharSix}
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,It appears you haven't changed CountPhainorSummon from default. Please refer to Dailies_readme.txt from the Zip file`}
	IF:	All
			SecsInStateGE 15
			Expr {getpvar[Options]==1}
			Any
				Expr {testpvar[Run]==1}
				Expr {testpvar[SummonPortal]==1}
				Expr {testpvar[UseBot]==1}
				All
					Not All
						Expr {getpvar[FellowCount]==`#`}
						Any
							Expr {getpvar[FellowCount]==2&&getpvar[FellowNameTwo]==CharTwo}
							Expr {getpvar[FellowCount]==3&&getpvar[FellowNameTwo]==CharTwo&&getpvar[FellowNameThree]==CharThree}
							Expr {getpvar[FellowCount]==4&&getpvar[FellowNameTwo]==CharTwo&&getpvar[FellowNameThree]==CharThree&&getpvar[FellowNameFour]==CharFour}
							Expr {getpvar[FellowCount]==5&&getpvar[FellowNameTwo]==CharTwo&&getpvar[FellowNameThree]==CharThree&&getpvar[FellowNameFour]==CharFour&&getpvar[FellowNameFive]==CharFive}
							Expr {getpvar[FellowCount]==6&&getpvar[FellowNameTwo]==CharTwo&&getpvar[FellowNameThree]==CharThree&&getpvar[FellowNameFour]==CharFour&&getpvar[FellowNameFive]==CharFive&&getpvar[FellowNameSix]==CharSix}
							Expr {getpvar[FellowCount]==7&&getpvar[FellowNameTwo]==CharTwo&&getpvar[FellowNameThree]==CharThree&&getpvar[FellowNameFour]==CharFour&&getpvar[FellowNameFive]==CharFive&&getpvar[FellowNameSix]==CharSix&&getpvar[FellowNameSeven]==CharSeven}
							Expr {getpvar[FellowCount]==8&&getpvar[FellowNameTwo]==CharTwo&&getpvar[FellowNameThree]==CharThree&&getpvar[FellowNameFour]==CharFour&&getpvar[FellowNameFive]==CharFive&&getpvar[FellowNameSix]==CharSix&&getpvar[FellowNameSeven]==CharSeven&&getpvar[FellowNameEight]==CharEight}
							Expr {getpvar[FellowCount]==9&&getpvar[FellowNameTwo]==CharTwo&&getpvar[FellowNameThree]==CharThree&&getpvar[FellowNameFour]==CharFour&&getpvar[FellowNameFive]==CharFive&&getpvar[FellowNameSix]==CharSix&&getpvar[FellowNameSeven]==CharSeven&&getpvar[FellowNameEight]==CharEight&&getpvar[FellowNameNine]==CharNine}
				All
					Expr {getpvar[SummonPortal]==1}
					Not All
						Expr {getpvar[UGKSummon]==CharOne}
						Expr {getpvar[SplittingGraelSummon]==CharTwo}
						Expr {getpvar[PurgingTheCorruptionSummon]==CharThree}
						Expr {getpvar[ProdigalBanderlingSummon]==CharTwo}
						Expr {getpvar[NexusCrawlSummon]==CharFive}
						Expr {getpvar[DeathsAllureSummon]==CharFive}
						Expr {getpvar[CountPhainorSummon]==CharSix}
				All
					Expr {getpvar[UseBot]==1}
					Not All
						Expr {getpvar[QuestKeyWordCountPhainor]==KeyWordPhainor}
						Expr {getpvar[QuestKeyWordDeathsAllure]==KeyWordHermit}
						Expr {getpvar[QuestKeyWordNexusCrawl]==KeyWordNexus}
						Expr {getpvar[QuestKeyWordProdigalBanderling]==KeyWordAyan}
						Expr {getpvar[QuestKeyWordPurgingTheCorruption]==KeyWordPTC}
						Expr {getpvar[QuestKeyWordSplittingGrael]==KeyWordAyan}
						Expr {getpvar[QuestKeyWordUnleashTheGearknight]==KeyWordUGK}
		DO:	DoAll
				DoExpr {setpvar[StateName,Default]}
				CreateView {Start} {<?xml version="1.0"?><view width="150" height="50" title="Start"><control type="layout"><control type="button" name="Start" left="0" top="0" width="149" height="49" text="Start" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+Start,1]" /></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+Start]==1}
		DO:	DoAll
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+AutoSetup]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+AutoSetupStart]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+LeaderName]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameTwo]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameThree]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFour]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DoNotClearOptionsAtEnd]}
				DestroyAllViews
				SetState {RecallCheckLists}
	IF:	All
			Expr {getpvar[ReturnProfile]==`RynDQLQuestCheck`}
			Expr {getpvar[Options]==1}
			Any
				SecsInStateGE 5
				ChatMatch {!Start}
		DO:	DoAll
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+AutoSetup]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+AutoSetupStart]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+LeaderName]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameTwo]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameThree]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFour]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
				DoExpr {cleargvar[getworldname[]+getpvar[GroupIdentifier]+DoNotClearOptionsAtEnd]}
				DestroyAllViews
				SetState {RecallCheckLists}
~~ }
STATE: {%% ToBotLocation %%} ~~ {
	IF:	Never
		DO:	Chat {From Town Network drop to Town Portal}
	IF:	BlockE 00070000
		DO:	EmbedNav nav0 {[none]}
	IF:	Never
		DO:	Chat {From Town Portal Drop to in front of Bot Location}
	IF:	CellE 016C01BC
		DO:	EmbedNav nav1 {[none]}
	IF:	Never
		DO:	Chat {Landcell in front of bots to return to previous meta}
	IF:	All
			NavEmpty
			BlockE 016C0000
		DO:	DoAll
				DoExpr {setpvar[Profile,RynDQLUseBot]}
				DoExpr {setpvar[StateName,CheckBotOnline]}
				Chat {/vt meta load RynDQLCheck}
	IF:	Always
		DO:	DoAll
				DoExpr {setpvar[Profile,RynDQLUseBot]}
				DoExpr {setpvar[StateName,ToTN]}
				SetWatchdog 5 30 {ZBotWatchDog}
~~ }
STATE: {AutoSetupIntial} ~~ {
	IF: Always
		DO: ChatExpr {\/t +getcharstringprop[1]+`,Create a fellow and recruit desired characters from your designated leader character.`}
	IF:	Not Expr {uiviewexists[Setup]}
		DO:	CreateView {Setup} {<?xml version="1.0"?><view width="300" height="101" title="Manual"><control type="layout"><control type="button" name="Manual" left="0" top="0" width="299" height="49" text="Recruit All Fellow Members, then press Go When Done" actionexpr="" /><control type="button" name="Auto-Setup" left="0" top="50" width="299" height="49" text="Go" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+AutoSetupStart,1]" /></control></view>}
	IF: All
			Expr {getfellowshipstatus[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AutoSetupStart]==1}
		DO: DoAll
				ChatExpr {\/t +getcharstringprop[1]+`,Beginning Fellow Layout, Continue to follow the prompts as they apear.`}
				DestroyAllViews
				SetState {GroupCountCount}
~~ }
STATE: {GroupCountCount} ~~ {
	~~ GroupCountSetup
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCountSetup]}
			Not Expr {testpvar[GroupIdentifier]}
			Not Expr {uiviewexists[GroupCountSetup]}
		DO:	CreateView {GroupCountSetup} {<?xml version="1.0"?><view width="360" height="101" title="GroupCountSetup"><control type="layout"><control type="button" name="GroupCountSetup" left="0" top="0" width="359" height="49" text="Do you plan to run more than one group?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCountSetup,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCountSetup,0]"/></control></view>}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCountSetup]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCountSetup]==1}
		DO: SetState {GroupCountSetup}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCountSetup]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCountSetup]==0}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[GroupIdentifier,0]}
	IF: Expr {testpvar[GroupIdentifier]}
		DO: DoAll
				DestroyAllViews
				SetState {FellowLayout}
~~ }
STATE: {GroupCountSetup} ~~ {
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {uiviewexists[GroupCount]}
		DO:	CreateView {GroupCount} {<?xml version="1.0"?><view width="360" height="152" title="GroupCount"><control type="layout"><control type="button" name="GroupCountDesignate" left="0" top="0" width="359" height="49" text="Which Group are you currently Setting up?" actionexpr=""/><control type="button" name="One" left="0" top="50" width="359" height="49" text="1" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCount,1]"/><control type="button" name="Two" left="0" top="101" width="179" height="49" text="2" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCount,2]"/><control type="button" name="Three" left="180" top="101" width="179" height="49" text="3" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCount,3]"/></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCount]==1}
		DO: DoAll
				DoExpr {setpvar[GroupIdentifier,GroupA]}
				DestroyAllViews
				SetState {GroupCountCount}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCount]==2}
		DO: DoAll
				DoExpr {setpvar[GroupIdentifier,GroupB]}
				DestroyAllViews
				SetState {GroupCountCount}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+GroupCount]==3}
		DO: DoAll
				DoExpr {setpvar[GroupIdentifier,GroupC]}
				DestroyAllViews
				SetState {GroupCountCount}
~~}
STATE: {FellowLayout} ~~ {
	IF: Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]==0}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount,getfellowshipcount[]]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]==0}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout,listcreate[]]}
	IF: Any
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			All
				Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
				Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]]<1}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout,getfellownames[]]}
	IF: Expr {getfellowshipisleader[]==1}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+LeaderName,getcharstringprop[1]]}
	IF: Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],getgvar[getworldname[]+getpvar[GroupIdentifier]+LeaderName]]}
		DO: DoExpr {listremove[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],getgvar[getworldname[]+getpvar[GroupIdentifier]+LeaderName]]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+LeaderName]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameTwo]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameThree]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFour]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine]}
		DO: SetState {FellowLayoutPrune}
	IF: All
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameTwo]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameTwo,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],0]]}
				SetState {FellowLayout}
	IF: All
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameThree]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameThree,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],1]]}
				SetState {FellowLayout}
	IF: All
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFour]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFour,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],2]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],4]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],5]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],6]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],7]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],3]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]<9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],3]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]<9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],4]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]<9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],5]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]<9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],6]]}
				SetState {FellowLayout}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]<9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout]}
			Expr {getfellowshipisleader[]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine,listgetitem[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayout],7]]}
				SetState {FellowLayout}
~~ }
STATE: {FellowLayoutPrune} ~~{
	IF: Always
		DO: DoExpr {setpvar[FellowCount,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+LeaderName]]==3}
			Not Expr {testpvar[LeaderName]}
		DO: DoExpr {setpvar[LeaderName,getgvar[getworldname[]+getpvar[GroupIdentifier]+LeaderName]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameTwo]]==3}
			Not Expr {testpvar[FellowNameTwo]}
		DO: DoExpr {setpvar[FellowNameTwo,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameTwo]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameThree]]==3}
			Not Expr {testpvar[FellowNameThree]}
		DO: DoExpr {setpvar[FellowNameThree,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameThree]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFour]]==3}
			Not Expr {testpvar[FellowNameFour]}
		DO: DoExpr {setpvar[FellowNameFour,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFour]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive]]==3}
			Not Expr {testpvar[FellowNameFive]}
		DO: DoExpr {setpvar[FellowNameFive,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameFive]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix]]==3}
			Not Expr {testpvar[FellowNameSix]}
		DO: DoExpr {setpvar[FellowNameSix,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSix]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven]]==3}
			Not Expr {testpvar[FellowNameSeven]}
		DO: DoExpr {setpvar[FellowNameSeven,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameSeven]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight]]==3}
			Not Expr {testpvar[FellowNameEight]}
		DO: DoExpr {setpvar[FellowNameEight,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameEight]]}
	IF: All
			Expr {getobjectinternaltype[getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine]]==3}
			Not Expr {testpvar[FellowNameNine]}
		DO: DoExpr {setpvar[FellowNameNine,getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowNameNine]]}
	IF: Any
			Expr {getpvar[FellowCount]==1&&testpvar[LeaderName]}
			Expr {getpvar[FellowCount]==2&&testpvar[LeaderName]&&testpvar[FellowNameTwo]}
			Expr {getpvar[FellowCount]==3&&testpvar[LeaderName]&&testpvar[FellowNameTwo]&&testpvar[FellowNameThree]}
			Expr {getpvar[FellowCount]==4&&testpvar[LeaderName]&&testpvar[FellowNameTwo]&&testpvar[FellowNameThree]&&testpvar[FellowNameFour]}
			Expr {getpvar[FellowCount]==5&&testpvar[LeaderName]&&testpvar[FellowNameTwo]&&testpvar[FellowNameThree]&&testpvar[FellowNameFour]&&testpvar[FellowNameFive]}
			Expr {getpvar[FellowCount]==6&&testpvar[LeaderName]&&testpvar[FellowNameTwo]&&testpvar[FellowNameThree]&&testpvar[FellowNameFour]&&testpvar[FellowNameFive]&&testpvar[FellowNameSix]}
			Expr {getpvar[FellowCount]==7&&testpvar[LeaderName]&&testpvar[FellowNameTwo]&&testpvar[FellowNameThree]&&testpvar[FellowNameFour]&&testpvar[FellowNameFive]&&testpvar[FellowNameSix]&&testpvar[FellowNameSeven]}
			Expr {getpvar[FellowCount]==8&&testpvar[LeaderName]&&testpvar[FellowNameTwo]&&testpvar[FellowNameThree]&&testpvar[FellowNameFour]&&testpvar[FellowNameFive]&&testpvar[FellowNameSix]&&testpvar[FellowNameSeven]&&testpvar[FellowNameEight]}
			Expr {getpvar[FellowCount]==9&&testpvar[LeaderName]&&testpvar[FellowNameTwo]&&testpvar[FellowNameThree]&&testpvar[FellowNameFour]&&testpvar[FellowNameFive]&&testpvar[FellowNameSix]&&testpvar[FellowNameSeven]&&testpvar[FellowNameEight]&&testpvar[FellowNameNine]}
		DO: SetState {AutoSetupPartTwo}
~~}
STATE: {AutoSetupPartTwo} ~~ {
	~~ SummonPets
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]}
			Not Any
				Expr {testpvar[SummonForBosses]}
				Expr {testpvar[SummonAllTheTime]}
			Not Expr {uiviewexists[SummonPetOptios]}
		DO:	CreateView {SummonPetOptios} {<?xml version="1.0"?><view width="360" height="152" title="SummonPetOptios"><control type="layout"><control type="button" name="SummonPetOptios" left="0" top="0" width="359" height="49" text="When would you like to use Summed Pets?" actionexpr=""/><control type="button" name="Bosses" left="0" top="50" width="179" height="49" text="Bosses" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios,Bosses]"/><control type="button" name="ATT" left="180" top="50" width="179" height="49" text="All The time" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios,ATT]"/><control type="button" name="Never" left="0" top="101" width="359" height="49" text="Never" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios,None]"/></control></view>}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]==Bosses}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[SummonForBosses,1]}
				DoExpr {setpvar[SummonAllTheTime,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]==ATT}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[SummonAllTheTime,1]}
				DoExpr {setpvar[SummonForBosses,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]}
			Any
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]==None}
				SecsInStateGE 30
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[SummonAllTheTime,0]}
				DoExpr {setpvar[SummonForBosses,0]}
	~~ Grael
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]}
			Not Expr {testpvar[DoQuestGrael]}
			Not Expr {uiviewexists[DoQuestGraelOption]}
		DO:	CreateView {DoQuestGraelOption} {<?xml version="1.0"?><view width="360" height="152" title="DoQuestGraelOption"><control type="layout"><control type="button" name="DoQuestGraelOption" left="0" top="0" width="359" height="49" text="Is your lifestone Dark Isle (84.6N, 58.6E) on all characters?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption,0]"/><control type="button" name="Maybe" left="0" top="101" width="359" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption,Maybe]"/></control></view>}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]==1}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[DoQuestGrael,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]==0}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[DoQuestGrael,0]}
	IF: All
			Not Expr {testpvar[DoQuestGrael]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]}
			Any
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]==Maybe}
				SecsInStateGE 30
		DO: DoAll
				DestroyAllViews
				SetState {CheckGraelLS}
	~~ ProdigalTusker
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]}
			Not Expr {testpvar[TuskerSecondary]}
			Not Expr {uiviewexists[SecondaryOptions]}
		DO:	CreateView {SecondaryOptions} {<?xml version="1.0"?><view width="360" height="152" title="SecondaryOptions"><control type="layout"><control type="button" name="SecondaryOptions" left="0" top="0" width="359" height="49" text="Is your secondary tie Whispering Caverns?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions,0]"/><control type="button" name="Maybe" left="0" top="101" width="359" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions,Maybe]"/></control></view>}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]==1}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[TuskerSecondary,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]==0}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[TuskerSecondary,0]}
	IF: All
			Not Expr {testpvar[TuskerSecondary]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]}
			Any
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]==Maybe}
				SecsInStateGE 30
		DO: DoAll
				DestroyAllViews
				SetState {CheckProdigalTie}
	~~ Candeth
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonPetOptios]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DoQuestGraelOption]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SecondaryOptions]}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]}
			Not Expr {testpvar[LSRecall]}
			Not Expr {uiviewexists[CandethAccess]}
		DO:	CreateView {CandethAccess} {<?xml version="1.0"?><view width="360" height="152" title="CandethAccess"><control type="layout"><control type="button" name="CandethAccess" left="0" top="0" width="359" height="49" text="Is your lifestone Recall set to Candeth or Do you have the recall?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess,0]"/><control type="button" name="Maybe" left="0" top="101" width="359" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess,Maybe]"/></control></view>}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]==1}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[LSRecall,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]==0}
		DO: DoAll
				DestroyAllViews
				DoExpr {setpvar[LSRecall,0]}
	IF: All
			Not Expr {testpvar[LSRecall]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]}
			Any
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CandethAccess]==Maybe}
				SecsInStateGE 30
		DO: DoAll
				DestroyAllViews
				SetState {CheckCandethAccess}
	IF: All
			Any
				Expr {testpvar[SummonForBosses]}
				Expr {testpvar[SummonAllTheTime]}
			Expr {testpvar[DoQuestGrael]}
			Expr {testpvar[TuskerSecondary]}
			Expr {testpvar[LSRecall]}
		DO: SetState {SummonSetup}
~~}
STATE: {SetAllToRun} ~~ {
	IF:	Always
		DO:	DoAll
				DoExpr {setpvar[RouteTogglePhainor,Run]}
				DoExpr {setpvar[RouteToggleDeathsAllure,Run]}
				DoExpr {setpvar[RouteToggleNexusCrawl,Run]}
				DoExpr {setpvar[RouteToggleProdigalBanderling,Run]}
				DoExpr {setpvar[RouteTogglePurgingTheCorruption,Run]}
				DoExpr {setpvar[RouteToggleSplittingGrael,Run]}
				DoExpr {setpvar[RouteToggleUGK,Run]}
				ChatExpr {\/t +getcharstringprop[1]+`,Press the Start Button to begin the daily quest loop. You'll experience a small delay after pressing start as it checks your recall spells for the group.`}
				SetState {%% Options %%}
~~}
STATE: {SummonSetup} ~~ {
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup]}
			Not Expr {uiviewexists[SummonSetup]}
		DO:	CreateView {SummonSetup} {<?xml version="1.0"?><view width="360" height="152" title="SummonSetup"><control type="layout"><control type="button" name="SummonSetupDes" left="0" top="0" width="359" height="49" text="Do you want to summon your own portals?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup,0]"/><control type="button" name="Maybe" left="0" top="101" width="359" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup,Maybe]"/></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup]==1}
		DO: DoAll
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup]}
			Any
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup]==0}
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SummonSetup]==Maybe}
		DO: DoAll
				DestroyAllViews
				SetState {SetAllToRun}
~~}
STATE: {SetupSummonProcess} ~~ {
	IF: Not Expr {testpvar[UGKSummon]} ~~ UGK Surface
		DO: SetState {UGKCycle}
	IF: Not Any
			Expr {testpvar[SplittingGraelSummon]} ~~ Ayan
			Expr {testpvar[ProdigalBanderlingSummon]} ~~ Ayan
		DO: SetState {AyanCycle}
	IF: Not Expr {testpvar[PurgingTheCorruptionSummon]} ~~ Tumerok Chamber
		DO: SetState {PurgeCycle}
	IF: Not Expr {testpvar[NexusCrawlSummon]} ~~ Nexus
		DO: SetState {NexusCycle}
	IF: Not Expr {testpvar[DeathsAllureSummon]} ~~ Thrungus Hole Surface
		DO: SetState {DeathsAllureCycle}
	IF: Not Expr {testpvar[CountPhainorSummon]} ~~ Count Phainor Surface
		DO: SetState {CountPhainorCycle}
	IF: All
			Expr {testpvar[UGKSummon]}
			Expr {testpvar[SplittingGraelSummon]}
			Expr {testpvar[ProdigalBanderlingSummon]}
			Expr {testpvar[NexusCrawlSummon]}
			Expr {testpvar[DeathsAllureSummon]}
			Expr {testpvar[CountPhainorSummon]}
		DO: DoAll
				ChatExpr {\/t +getcharstringprop[1]+`,Press the Start Button to begin the daily quest loop. You'll experience a small delay after pressing start as it checks your recall spells for the group.`}
				SetState {%% Options %%}
~~}
STATE: {UGKCycle} ~~ {
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {uiviewexists[UGKSummonSetup]}
		DO:	CreateView {UGKSummonSetup} {<?xml version="1.0"?><view width="360" height="152" title="UGKSummonSetUp"><control type="layout"><control type="button" name="UGKDesignate" left="0" top="0" width="359" height="49" text="Is IFNH tied to UGK Surface Portal?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+UGK,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]+1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/><control type="button" name="Maybe" left="0" top="101" width="179" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+UGK,Maybe]"/><control type="button" name="BackButton" left="180" top="101" width="179" height="49" text="Back" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]-1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]==1}
		DO: DoAll
				DoExpr {setpvar[RouteToggleUGK,SummonPortal]}
				DoExpr {setpvar[UGKSummon,getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar]]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: Any
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]==Maybe}
			All
				Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]>=getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]+3}
		DO: DoAll
				DoExpr {setpvar[RouteToggleUGK,Run]}
				DoExpr {setpvar[UGKSummon,Undefined]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==0}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[LeaderName]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[LeaderName]+\ Tied to UGK Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=2}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[FellowNameTwo]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[FellowNameTwo]+\ Tied to UGK Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=3}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==2}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[FellowNameThree]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[FellowNameThree]+\ Tied to UGK Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=4}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==3}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[FellowNameFour]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[FellowNameFour]+\ Tied to UGK Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=5}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==4}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[FellowNameFive]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[FellowNameFive]+\ Tied to UGK Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=6}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==5}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[FellowNameSix]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[FellowNameSix]+\ Tied to UGK Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=7}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==6}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[FellowNameSeven]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[FellowNameSeven]+\ Tied to UGK Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=8}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==7}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[FellowNameEight]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[FellowNameEight]+\ Tied to UGK Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+UGK]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+UGKCharNum]==8}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+UGKChar,getpvar[FellowNameNine]]}
				DoExpr {uisetlabel[uigetcontrol[UGKSummonSetup,UGKDesignate],Is +getpvar[FellowNameNine]+\ Tied to UGK Surface Portal\?]}
~~}
STATE: {AyanCycle} ~~ {
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {uiviewexists[AyanSummonSetup]}
		DO:	CreateView {AyanSummonSetup} {<?xml version="1.0"?><view width="360" height="152" title="AyanSummonSetup"><control type="layout"><control type="button" name="AyanDesignate" left="0" top="0" width="359" height="49" text="Is IFNH tied to Ayan Town Drop Portal?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]+1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/><control type="button" name="Maybe" left="0" top="101" width="179" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan,Maybe]"/><control type="button" name="BackButton" left="180" top="101" width="179" height="49" text="Back" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]-1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]==1}
		DO: DoAll
				DoExpr {setpvar[RouteToggleProdigalBanderling,SummonPortal]}
				DoExpr {setpvar[RouteToggleSplittingGrael,SummonPortal]}
				DoExpr {setpvar[SplittingGraelSummon,getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar]]}
				DoExpr {setpvar[ProdigalBanderlingSummon,getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar]]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: Any
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]==Maybe}
			All
				Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]>=getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]+3}
		DO: DoAll
				DoExpr {setpvar[RouteToggleSplittingGrael,Run]}
				DoExpr {setpvar[RouteToggleProdigalBanderling,Run]}
				DoExpr {setpvar[SplittingGraelSummon,Undefined]}
				DoExpr {setpvar[ProdigalBanderlingSummon,Undefined]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==0}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[LeaderName]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[LeaderName]+\ Tied to Ayan Town Drop Portal\?]}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=2}
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[FellowNameTwo]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[FellowNameTwo]+\ Tied to Ayan Town Drop Portal\?]}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=3}
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==2}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[FellowNameThree]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[FellowNameThree]+\ Tied to Ayan Town Drop Portal\?]}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=4}
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==3}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[FellowNameFour]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[FellowNameFour]+\ Tied to Ayan Town Drop Portal\?]}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=5}
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==4}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[FellowNameFive]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[FellowNameFive]+\ Tied to Ayan Town Drop Portal\?]}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=6}
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==5}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[FellowNameSix]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[FellowNameSix]+\ Tied to Ayan Town Drop Portal\?]}
	IF: All
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=7}
			Expr {getfellowshipisleader[]==1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==6}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[FellowNameSeven]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[FellowNameSeven]+\ Tied to Ayan Town Drop Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=8}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==7}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[FellowNameEight]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[FellowNameEight]+\ Tied to Ayan Town Drop Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Ayan]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AyanCharNum]==8}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AyanChar,getpvar[FellowNameNine]]}
				DoExpr {uisetlabel[uigetcontrol[AyanSummonSetup,AyanDesignate],Is +getpvar[FellowNameNine]+\ Tied to Ayan Surface Portal\?]}
~~}
STATE: {PurgeCycle} ~~ {
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {uiviewexists[PurgeSummonSetup]}
		DO:	CreateView {PurgeSummonSetup} {<?xml version="1.0"?><view width="360" height="152" title="PurgeSummonSetup"><control type="layout"><control type="button" name="PurgeDesignate" left="0" top="0" width="359" height="49" text="Is IFNH tied to Tumerok Chamber Surface Portal?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+Purge,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]+1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/><control type="button" name="Maybe" left="0" top="101" width="179" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+Purge,Maybe]"/><control type="button" name="BackButton" left="180" top="101" width="179" height="49" text="Back" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]-1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]==1}
		DO: DoAll
				DoExpr {setpvar[RouteTogglePurgingTheCorruption,SummonPortal]}
				DoExpr {setpvar[PurgingTheCorruptionSummon,getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar]]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: Any
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]==Maybe}
			All
				Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]>=getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]+3}
		DO: DoAll
				DoExpr {setpvar[RouteTogglePurgingTheCorruption,Run]}
				DoExpr {setpvar[PurgingTheCorruptionSummon,Undefined]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==0}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[LeaderName]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[LeaderName]+\ Tied to Tumerok Chamber Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=2}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[FellowNameTwo]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[FellowNameTwo]+\ Tied to Tumerok Chamber Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=3}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==2}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[FellowNameThree]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[FellowNameThree]+\ Tied to Tumerok Chamber Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=4}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==3}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[FellowNameFour]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[FellowNameFour]+\ Tied to Tumerok Chamber Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=5}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==4}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[FellowNameFive]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[FellowNameFive]+\ Tied to Tumerok Chamber Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=6}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==5}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[FellowNameSix]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[FellowNameSix]+\ Tied to Tumerok Chamber Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=7}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==6}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[FellowNameSeven]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[FellowNameSeven]+\ Tied to Tumerok Chamber Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=8}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==7}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[FellowNameEight]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[FellowNameEight]+\ Tied to Tumerok Chamber Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Purge]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeCharNum]==8}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PurgeChar,getpvar[FellowNameNine]]}
				DoExpr {uisetlabel[uigetcontrol[PurgeSummonSetup,PurgeDesignate],Is +getpvar[FellowNameNine]+\ Tied to Tumerok Chamber Surface Portal\?]}
~~}
STATE: {NexusCycle} ~~ {
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {uiviewexists[NexusSummonSetup]}
		DO:	CreateView {NexusSummonSetup} {<?xml version="1.0"?><view width="360" height="152" title="NexusSummonSetup"><control type="layout"><control type="button" name="NexusDesignate" left="0" top="0" width="359" height="49" text="Is IFNH tied to Nexus Surface Portal?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]+1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/><control type="button" name="Maybe" left="0" top="101" width="179" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus,Maybe]"/><control type="button" name="BackButton" left="180" top="101" width="179" height="49" text="Back" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]-1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]==1}
		DO: DoAll
				DoExpr {setpvar[RouteToggleNexusCrawl,SummonPortal]}
				DoExpr {setpvar[NexusCrawlSummon,getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar]]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: Any
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]==Maybe}
			All
				Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]>=getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]+3}
		DO: DoAll
				DoExpr {setpvar[RouteToggleNexusCrawl,Run]}
				DoExpr {setpvar[NexusCrawlSummon,Undefined]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==0}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[LeaderName]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[LeaderName]+\ Tied to Nexus Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=2}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[FellowNameTwo]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[FellowNameTwo]+\ Tied to Nexus Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=3}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==2}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[FellowNameThree]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[FellowNameThree]+\ Tied to Nexus Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=4}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==3}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[FellowNameFour]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[FellowNameFour]+\ Tied to Nexus Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=5}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==4}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[FellowNameFive]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[FellowNameFive]+\ Tied to Nexus Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=6}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==5}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[FellowNameSix]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[FellowNameSix]+\ Tied to Nexus Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=7}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==6}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[FellowNameSeven]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[FellowNameSeven]+\ Tied to Nexus Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=8}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==7}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[FellowNameEight]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[FellowNameEight]+\ Tied to Nexus Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+Nexus]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+NexusCharNum]==8}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+NexusChar,getpvar[FellowNameNine]]}
				DoExpr {uisetlabel[uigetcontrol[NexusSummonSetup,NexusDesignate],Is +getpvar[FellowNameNine]+\ Tied to Nexus Surface Portal\?]}
~~}
STATE: {DeathsAllureCycle} ~~ {
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {uiviewexists[DeathsAllureSummonSetup]}
		DO:	CreateView {DeathsAllureSummonSetup} {<?xml version="1.0"?><view width="360" height="152" title="NexusSummonSetup"><control type="layout"><control type="button" name="DeathsAllureDesignate" left="0" top="0" width="359" height="49" text="Is IFNH tied to Thrungus Hole Surface Portal?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]+1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/><control type="button" name="Maybe" left="0" top="101" width="179" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure,Maybe]"/><control type="button" name="BackButton" left="180" top="101" width="179" height="49" text="Back" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]-1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]==1}
		DO: DoAll
				DoExpr {setpvar[RouteToggleDeathsAllure,SummonPortal]}
				DoExpr {setpvar[DeathsAllureSummon,getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar]]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: Any
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]==Maybe}
			All
				Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]>=getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]+3}
		DO: DoAll
				DoExpr {setpvar[RouteToggleDeathsAllure,Run]}
				DoExpr {setpvar[DeathsAllureSummon,Undefined]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==0}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[LeaderName]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[LeaderName]+\ Tied to Thrungus Hole Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=2}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[FellowNameTwo]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[FellowNameTwo]+\ Tied to Thrungus Hole Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=3}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==2}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[FellowNameThree]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[FellowNameThree]+\ Tied to Thrungus Hole Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=4}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==3}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[FellowNameFour]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[FellowNameFour]+\ Tied to Thrungus Hole Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=5}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==4}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[FellowNameFive]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[FellowNameFive]+\ Tied to Thrungus Hole Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=6}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==5}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[FellowNameSix]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[FellowNameSix]+\ Tied to Thrungus Hole Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=7}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==6}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[FellowNameSeven]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[FellowNameSeven]+\ Tied to Thrungus Hole Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=8}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==7}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[FellowNameEight]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[FellowNameEight]+\ Tied to Thrungus Hole Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllure]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureCharNum]==8}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+DeathsAllureChar,getpvar[FellowNameNine]]}
				DoExpr {uisetlabel[uigetcontrol[DeathsAllureSummonSetup,DeathsAllureDesignate],Is +getpvar[FellowNameNine]+\ Tied to Thrungus Hole Surface Portal\?]}
~~}
STATE: {CountPhainorCycle} ~~ {
	IF:	All
			Expr {getfellowshipisleader[]==1}
			Not Expr {uiviewexists[CountPhainorSummonSetup]}
		DO:	CreateView {CountPhainorSummonSetup} {<?xml version="1.0"?><view width="360" height="152" title="CountPhainorSummonSetup"><control type="layout"><control type="button" name="CountPhainorDesignate" left="0" top="0" width="359" height="49" text="Is IFNH tied to Count Phainor Surface Portal?" actionexpr=""/><control type="button" name="Yes" left="0" top="50" width="179" height="49" text="Yes" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor,1]"/><control type="button" name="No" left="180" top="50" width="179" height="49" text="No" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]+1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/><control type="button" name="Maybe" left="0" top="101" width="179" height="49" text="Maybe" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor,Maybe]"/><control type="button" name="BackButton" left="180" top="101" width="179" height="49" text="Back" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum,getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]-1]&amp;&amp;vtsetmetastate[vtgetmetastate[]]"/></control></view>}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]==1}
		DO: DoAll
				DoExpr {setpvar[RouteTogglePhainor,SummonPortal]}
				DoExpr {setpvar[CountPhainorSummon,getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar]]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: Any
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]==Maybe}
			All
				Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
				Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]>=getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]+3}
		DO: DoAll
				DoExpr {setpvar[RouteTogglePhainor,Run]}
				DoExpr {setpvar[CountPhainorSummon,Undefined]}
				DestroyAllViews
				SetState {SetupSummonProcess}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=1}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==0}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[LeaderName]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[LeaderName]+\ Tied to Count Phainor Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=2}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==1}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[FellowNameTwo]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[FellowNameTwo]+\ Tied to Count Phainor Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=3}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==2}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[FellowNameThree]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[FellowNameThree]+\ Tied to Count Phainor Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=4}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==3}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[FellowNameFour]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[FellowNameFour]+\ Tied to Count Phainor Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=5}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==4}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[FellowNameFive]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[FellowNameFive]+\ Tied to Count Phainor Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=6}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==5}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[FellowNameSix]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[FellowNameSix]+\ Tied to Count Phainor Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=7}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==6}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[FellowNameSeven]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[FellowNameSeven]+\ Tied to Count Phainor Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=8}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==7}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[FellowNameEight]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[FellowNameEight]+\ Tied to Count Phainor Surface Portal\?]}
	IF: All
			Expr {getfellowshipisleader[]==1}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FellowLayoutFellowCount]>=9}
			Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainor]}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorCharNum]==8}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CountPhainorChar,getpvar[FellowNameNine]]}
				DoExpr {uisetlabel[uigetcontrol[CountPhainorSummonSetup,CountPhainorDesignate],Is +getpvar[FellowNameNine]+\ Tied to Count Phainor Surface Portal\?]}
~~}
STATE: {CheckGraelLS} ~~ {
	IF: Always
		DO: DoAll
				SetOpt {EnableCombat} {False}
				SetOpt {EnableBuffing} {False}
	IF: All
			SecsInStateGE 3
			BlockE C8E90000
			Expr {getvar[Lifestonerecall]==1}
		DO: DoAll
				DoExpr {setpvar[DoQuestGrael,1]}
				SetState {AutoSetupPartTwo}
	IF: All
			SecsInStateGE 3
			Not BlockE C8E90000
			Expr {getvar[Lifestonerecall]==1}
		DO: DoAll
				DoExpr {setpvar[DoQuestGrael,1]}
				SetState {AutoSetupPartTwo}
	IF: IntoPortal
		DO: DoExpr {setvar[Lifestonerecall,1]}
	IF: Expr {getvar[Lifestonerecall]==0}
		DO: Chat {/ls}
	IF: SecsInStateGE 20
		DO: SetState {CheckGraelLS}
~~}
STATE: {CheckProdigalTie} ~~ {
	IF:	All
			Expr {getvar[CheckProdigalTie]==0}
			Not BlockE EA6C0000
		DO:	DoExpr {actiontrycastbyid[2647]} ~~ SpellId 2647 is "Secondary Portal Recall".
	IF:	All
			SecsInStateGE 3
			Expr {getvar[CheckProdigalTie]==1}
			BlockE EA6C0000
		DO:	DoAll
				DoExpr {setpvar[TuskerSecondary,1]}
				SetState {AutoSetupPartTwo}
	IF:	All
			SecsInStateGE 3
			Expr {getvar[CheckProdigalTie]==1}
			Not BlockE EA6C0000
		DO:	DoAll
				DoExpr {setpvar[TuskerSecondary,0]}
				SetState {AutoSetupPartTwo}
	IF: IntoPortal
		DO: DoExpr {setvar[CheckProdigalTie,1]}
	IF:	All
			SecsInStateGE 3
			Expr {getvar[CheckProdigalTie]==0}
		DO:	SetState {CheckProdigalTie}
~~ }
STATE: {CheckCandethAccess} ~~ {
	IF: Expr {getisspellknown[4214]}
		DO: DoAll
				DoExpr {setpvar[LSRecall,1]}
				SetState {AutoSetupPartTwo}
	IF:	All
			Expr {getvar[CheckCandethAccess]==0}
			Not BlockE 2B120000
		DO:	DoExpr {actiontrycastbyid[1635]} ~~ SpellId 1635 is "Secondary Portal Recall".
	IF:	All
			SecsInStateGE 3
			Expr {getvar[CheckCandethAccess]==1}
			BlockE 2B120000
		DO:	DoAll
				DoExpr {setpvar[LSRecall,1]}
				SetState {AutoSetupPartTwo}
	IF:	All
			SecsInStateGE 3
			Expr {getvar[CheckCandethAccess]==1}
			Not BlockE 2B120000
		DO:	DoAll
				DoExpr {setpvar[LSRecall,0]}
				SetState {AutoSetupPartTwo}
	IF: IntoPortal
		DO: DoExpr {setvar[CheckCandethAccess,1]}
	IF:	All
			SecsInStateGE 3
			Expr {getvar[CheckCandethAccess]==0}
		DO:	SetState {CheckCandethAccess}
~~ }
STATE: {Default} ~~ {
	IF:	Not Expr {uiviewexists[Setup]}
		DO:	CreateView {Setup} {<?xml version="1.0"?><view width="150" height="152" title="Manual"><control type="layout"><control type="button" name="Manual" left="0" top="0" width="149" height="49" text="Preset" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+Manual,1]"/><control type="button" name="Auto-Gen Setup" left="0" top="50" width="149" height="49" text="Assisted Setup" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+AutoSetup,1]"/><control type="button" name="Do Not Ask Again" left="0" top="100" width="149" height="49" text="Do Not Ask Again" actionexpr="setgvar[getworldname[]+getpvar[GroupIdentifier]+DoNotClearOptionsAtEnd,1]"/></control></view>}
	IF:	All
			Expr {getpvar[ReturnProfile]==CMD}
		DO:	SetState {%% Options %%}
	IF: Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+DoNotClearOptionsAtEnd]==1}
		DO: DoAll
				ChatExpr {\/t +getcharstringprop[1]+`,You pressed Do Not Ask Again, if you clear your persistent or global variables you will have to re-apply your options from Preset or Auto-setup.`}
				DoExpr {setpvar[DoNotClearOptionsAtEnd,1]}
	IF:	Any
			SecsInStateGE 60
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AutoSetup]==1}
		DO: DoAll
				DoExpr {clearpvar[RouteTogglePhainor]}
				DoExpr {clearpvar[RouteToggleDeathsAllure]}
				DoExpr {clearpvar[RouteToggleNexusCrawl]}
				DoExpr {clearpvar[RouteToggleProdigalBanderling]}
				DoExpr {clearpvar[RouteTogglePurgingTheCorruption]}
				DoExpr {clearpvar[RouteToggleSplittingGrael]}
				DoExpr {clearpvar[RouteToggleUGK]}
				DoExpr {clearpvar[LSRecall]}
				DoExpr {clearpvar[Grael]}
				DoExpr {clearpvar[TuskerSecondary]}
				DoExpr {clearpvar[FellowCount]}
				DoExpr {clearpvar[LeaderName]}
				DoExpr {clearpvar[FellowNameTwo]}
				DoExpr {clearpvar[FellowNameThree]}
				DoExpr {clearpvar[FellowNameFour]}
				DoExpr {clearpvar[FellowNameFive]}
				DoExpr {clearpvar[FellowNameSix]}
				DoExpr {clearpvar[FellowNameSeven]}
				DoExpr {clearpvar[FellowNameEight]}
				DoExpr {clearpvar[FellowNameNine]}
				DoExpr {clearpvar[BotCount1]}
				DoExpr {clearpvar[BotName]}
				DoExpr {clearpvar[BotNameOne]}
				DoExpr {clearpvar[BotNameTwo]}
				DoExpr {clearpvar[BotNameThree]}
				DoExpr {clearpvar[BotNameFour]}
				DoExpr {clearpvar[BotNameFive]}
				DoExpr {clearpvar[BotNameSix]}
				DoExpr {clearpvar[BotNameSeven]}
				DoExpr {clearpvar[BotNameEight]}
				DoExpr {clearpvar[BotNameNine]}
				DoExpr {clearpvar[BotNameTen]}
				DoExpr {clearpvar[BotNameEleven]}
				DoExpr {clearpvar[QuestKeyWordCountPhainor]}
				DoExpr {clearpvar[QuestKeyWordDeathsAllure]}
				DoExpr {clearpvar[QuestKeyWordNexusCrawl]}
				DoExpr {clearpvar[QuestKeyWordProdigalBanderling]}
				DoExpr {clearpvar[QuestKeyWordPurgingTheCorruption]}
				DoExpr {clearpvar[QuestKeyWordSplittingGrael]}
				DoExpr {clearpvar[QuestKeyWordUnleashTheGearknight]}
				DoExpr {clearpvar[UGKSummon]}
				DoExpr {clearpvar[SplittingGraelSummon]}
				DoExpr {clearpvar[PurgingTheCorruptionSummon]}
				DoExpr {clearpvar[ProdigalBanderlingSummon]}
				DoExpr {clearpvar[NexusCrawlSummon]}
				DoExpr {clearpvar[DeathsAllureSummon]}
				DoExpr {clearpvar[CountPhainorSummon]}
				DoExpr {clearpvar[UseBot]}
				DoExpr {clearpvar[SummonPortal]}
				DoExpr {clearpvar[Run]}
				DoExpr {clearpvar[StateName]}
				DoExpr {clearpvar[Profile]}
				ChatExpr {\/t +getcharstringprop[1]+`,Follow The Prompts.`}
				DestroyAllViews
				DoExpr {setpvar[DoNotClearOptionsAtEnd,1]}
				SetState {AutoSetupIntial}
	IF:	Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+Manual]==1}
		DO:	DoAll
				DoExpr {clearpvar[RouteTogglePhainor]}
				DoExpr {clearpvar[RouteToggleDeathsAllure]}
				DoExpr {clearpvar[RouteToggleNexusCrawl]}
				DoExpr {clearpvar[RouteToggleProdigalBanderling]}
				DoExpr {clearpvar[RouteTogglePurgingTheCorruption]}
				DoExpr {clearpvar[RouteToggleSplittingGrael]}
				DoExpr {clearpvar[RouteToggleUGK]}
				DoExpr {clearpvar[LSRecall]}
				DoExpr {clearpvar[Grael]}
				DoExpr {clearpvar[TuskerSecondary]}
				DoExpr {clearpvar[FellowCount]}
				DoExpr {clearpvar[LeaderName]}
				DoExpr {clearpvar[FellowNameTwo]}
				DoExpr {clearpvar[FellowNameThree]}
				DoExpr {clearpvar[FellowNameFour]}
				DoExpr {clearpvar[FellowNameFive]}
				DoExpr {clearpvar[FellowNameSix]}
				DoExpr {clearpvar[FellowNameSeven]}
				DoExpr {clearpvar[FellowNameEight]}
				DoExpr {clearpvar[FellowNameNine]}
				DoExpr {clearpvar[BotCount1]}
				DoExpr {clearpvar[BotName]}
				DoExpr {clearpvar[BotNameOne]}
				DoExpr {clearpvar[BotNameTwo]}
				DoExpr {clearpvar[BotNameThree]}
				DoExpr {clearpvar[BotNameFour]}
				DoExpr {clearpvar[BotNameFive]}
				DoExpr {clearpvar[BotNameSix]}
				DoExpr {clearpvar[BotNameSeven]}
				DoExpr {clearpvar[BotNameEight]}
				DoExpr {clearpvar[BotNameNine]}
				DoExpr {clearpvar[BotNameTen]}
				DoExpr {clearpvar[BotNameEleven]}
				DoExpr {clearpvar[QuestKeyWordCountPhainor]}
				DoExpr {clearpvar[QuestKeyWordDeathsAllure]}
				DoExpr {clearpvar[QuestKeyWordNexusCrawl]}
				DoExpr {clearpvar[QuestKeyWordProdigalBanderling]}
				DoExpr {clearpvar[QuestKeyWordPurgingTheCorruption]}
				DoExpr {clearpvar[QuestKeyWordSplittingGrael]}
				DoExpr {clearpvar[QuestKeyWordUnleashTheGearknight]}
				DoExpr {clearpvar[UGKSummon]}
				DoExpr {clearpvar[SplittingGraelSummon]}
				DoExpr {clearpvar[PurgingTheCorruptionSummon]}
				DoExpr {clearpvar[ProdigalBanderlingSummon]}
				DoExpr {clearpvar[NexusCrawlSummon]}
				DoExpr {clearpvar[DeathsAllureSummon]}
				DoExpr {clearpvar[CountPhainorSummon]}
				DoExpr {clearpvar[StateName]}
				DoExpr {clearpvar[Profile]}
				DestroyAllViews
				ChatExpr {\/t +getcharstringprop[1]+`,Press the Start Button to begin the daily quest loop. You'll experience a small delay after pressing start as it checks your recall spells for the group.`}
				SetState {%% Options %%}
~~ }
STATE: {RecallCheckLists} ~~ {
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck]}
			Expr {getcharskill_traininglevel[41]==3||getcharskill_traininglevel[44]==3||getcharskill_traininglevel[45]==3||getcharskill_traininglevel[46]==3}
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck]}
			Expr {getisspellknown[1636]==1} ~~ LSS
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck]}
			Expr {getisspellknown[2645]==1} ~~ PortalRecall
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck]}
			Expr {getisspellknown[2931]==1} ~~ Aphus Lassel
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck]}
			Expr {getisspellknown[2023]==1} ~~ Sanc
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck]}
			Expr {getisspellknown[6150]==1} ~~ Rynthid
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck]}
			Expr {getisspellknown[4213]==1} ~~ Colo
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck]}
			Expr {getisspellknown[4214]==1} ~~ Candeth
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck]}
			Expr {getisspellknown[5330]==1} ~~ GK Recall
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck]}
			Expr {getisspellknown[4128]==1} ~~ GY Recall
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: Not Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck]}
		DO: DoAll
				DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck,listcreate[]]}
				SetState {RecallCheckLists}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck]}
			Expr {getisspellknown[5175]==1} ~~ Facility Hub Recall
			Not Expr {listcontains[getgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck],getcharstringprop[1]]}
		DO: DoAll
				DoExpr {listadd[getgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck],getcharstringprop[1]]}
				SetState {RecallCheckLists}
	IF: SecsInStateGE 5
		DO: SetState {RecallCheckListsB}
~~ }
STATE: {RecallCheckListsB} ~~ {
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroup,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnown,1]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck]]>=getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnown,1]}
	~~~ Not known BlockE
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroup,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnown,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnown,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnown,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnown,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnown,0]}
	
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnown,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnown,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnown,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnown,0]}
	IF: All
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck]}
			Expr {listcount[getgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnownCheck]]<getpvar[FellowCount]}
		DO: DoExpr {setgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnown,0]}
	IF: All
			SecsInStateGE 5
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+MeleeGroupCheck]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnown]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnown]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+LSSKnown]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnown]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnown]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnown]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnown]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnown]}
			Expr {testgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnown]}
		DO: SetState {RecallCheck}
~~ }
STATE: {RecallCheck} ~~ {
	IF:	Expr {uboptget[`VTank.PatchExpressionEngine`]==0}
		DO:	DoAll
				Chat {/ub opt set VTank.PatchExpressionEngine True}
				Chat {/ub delay 3000 setpvar[PatchToggle,1]}
	IF:	Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+PortalRecallKnown]==0}
		DO:	DoAll
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Portal Recall. It can be acquired from the professors in Arwic. http://acpedia.org/wiki/Professors_of_Magic`}
				ChatExpr {\/t +getcharstringprop[1]+`,The Meta will not function without this recall.`}
				SetState {Finished}
	IF:	Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+AphusLasselKnown]==0}
		DO:	DoAll
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Aphus Lassel Recall. It can be acquired from http://acpedia.org/wiki/The_Legend_of_the_Tusker_Paw`}
				ChatExpr {\/t +getcharstringprop[1]+`,The Meta will not function without this recall.`}
				SetState {Finished}
	IF:	Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+SancRecallKnown]==0}
		DO:	DoAll
				DoExpr {setpvar[DoQuestIQSQ,0]}
				DoExpr {setpvar[DoQuestLostLore,0]}
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Sanctuary Recall. Skipping Associated Quests: Ithenac Quidity Seed, Lost Lore, and Releasing the Light.`}
	IF:	Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+RynthidRecallKnown]==0}
		DO:	DoAll
				DoExpr {setpvar[DoQuestEOD,0]}
				DoExpr {setpvar[DoQuestLugianAssault,0]}
				DoExpr {setpvar[DoQuestRynthidWeapon,0]}
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Rynthid Recall. Skipping Associated Quests: End of Days, Lugian Assault, and Rynthid Weapon.`}
	IF:	Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+ColoRecallKnown]==0}
		DO:	DoAll
				DoExpr {setpvar[DoQuestIQSQ,0]}
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Colosseum Recall. Auto-fellow on crash or quest completion may fail without this recall.`}
	IF:	Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+GKRecallKnown]==0}
		DO:	DoAll
				DoExpr {setpvar[DoQuestAF,0]}
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Gearknight Recall. Skipping Associated Quests: Apostate Finale.`}
	IF:	All
			Expr {getpvar[LSRecall]==0}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+CandethRecallKnown]==0}
		DO:	DoAll
				DoExpr {setpvar[DoQuestPurge,0]}
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Candeth Keep Recall. Skipping Associated Quests: Purging The Corruption; Alternatively you can enable Lifestone recall in the options.`}
	IF:	Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+GYRecallKnown]==0}
		DO:	DoAll
				DoExpr {setpvar[DoQuestCP,0]}
				DoExpr {setpvar[DoQuestGeraineStudy,0]}
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Graveyard Recall. Skipping Associated Quests: Count Phainor and Geraine Study If summon is disabled.`}
	IF:	All
			Expr {getpvar[TuskerSecondary]==0}
			Expr {getgvar[getworldname[]+getpvar[GroupIdentifier]+FacHubKnown]==0}
		DO:	DoAll
				DoExpr {setpvar[DoQuestProdigalTusker,0]}
				ChatExpr {\/t +getcharstringprop[1]+`,You are missing Facility Hub Recall. Skipping Associated Quests: Prodigal Tusker If not tied with Secondary portal tie.`}
	IF:	Always
		DO:	ChatExpr {\/t +getcharstringprop[1]+`,Splitting Grael requires your lifestone to be Dark Isle in the options you can enable or disable the quest.`}
	IF:	All
			SecsInStateGE 3
		DO: DoAll
				DoExpr {setpvar[StateName,Default]}
				Chat {/vt meta load RynDQLQuestCheck}
~~ }
STATE: {ZBotWatchDog} ~~ {
	IF:	Always
		DO:	DoAll
				DoExpr {setpvar[Profile,RynDQLUseBot]}
				DoExpr {setpvar[StateName,ToTN]}
				Chat {/vt meta load RynDQLCheck}
~~ }

~~========================= ONLY NAVS APPEAR BELOW THIS LINE =========================~~

NAV: nav0 once ~~ {
	pnt -101.658333333333 -96.6833333333333 2.08333134651184E-05
	pnt -101.659114933014 -96.7031222979228 2.08333134651184E-05
	pnt -101.660135746002 -96.72669506073 2.08333134651184E-05
	pnt -101.657766246796 -96.7476028760274 2.08333134651184E-05
	pnt -101.645841821035 -96.7652930577596 2.08333134651184E-05
	pnt -101.625103314718 -96.7678110122681 2.08333134651184E-05
	pnt -101.602688217163 -96.7686456680298 2.08333134651184E-05
	ptl -101.602688217163 -96.7686456680298 2.08333134651184E-05 -101.591127904256 -96.7665904045105 -0.000262499845121056 14 {The Marketplace of Dereth}
	pau -101.602688217163 -96.7686456680298 2.08333134651184E-05 5000
	cht -101.602688217163 -96.7686456680298 2.08333134651184E-05 {/ub uselp The Marketplace of Dereth}
~~ }
NAV: nav1 once ~~ {
	pnt -100.944974994659 -15.6830624977748 2.08333134651184E-05
	pnt -100.92919403712 -15.6864161173503 2.08333134651184E-05
	pnt -100.921120643616 -15.6969423611959 2.08333134651184E-05
	pnt -100.910243940353 -15.7094677448273 2.08333134651184E-05
	pnt -100.903115924199 -15.7201889197032 2.08333134651184E-05
	pnt -100.90093905131 -15.7352587223053 2.08333134651184E-05
	chk -100.90093905131 -15.7352587223053 2.08333134651184E-05
	pnt -100.901763534546 -15.7457143306732 2.08333134651184E-05
	pnt -100.898385413488 -15.755944220225 2.08333134651184E-05
	pnt -100.892033322652 -15.7589843908946 2.08333134651184E-05
	pnt -100.804785569509 -15.7576260725657 2.08333134651184E-05
	pnt -100.796630764008 -15.7582992553711 2.08333134651184E-05
	pnt -100.788682683309 -15.7621260325114 2.08333134651184E-05
	pnt -100.768677902222 -15.7751808166504 2.08333134651184E-05
	pnt -100.73700911204 -15.7987366517385 2.08333134651184E-05
~~ }
