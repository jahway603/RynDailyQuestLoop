~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~																						
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.	
~~		Get metaf here: https://github.com/JJEII/metaf/									
~~																						
~~ All recognized structural designators:												
~~		STATE:				DO:															
~~		IF:					NAV:														
~~																						
~~ All recognized CONDITION (IF:) operation keywords:									
~~		Never				NavEmpty			MobsInDist_Priority		Not				
~~		Always				Death				NeedToBuff				PSecsInStateGE	
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE	
~~		Any					VendorClosed		BlockE					BuPercentGE		
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE		
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr			
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture		
~~																						
~~ All recognized ACTION (DO:) operation keywords:										
~~		None				EmbedNav			ChatExpr				SetOpt			
~~		SetState			CallState			SetWatchdog				CreateView		
~~		Chat				Return				ClearWatchdog			DestroyView		
~~		DoAll				DoExpr				GetOpt					DestroyAllViews	
~~																						
~~ All recognized NAV types:															
~~		circular			follow														
~~		linear				once														
~~																						
~~ All recognized NAV NODE types:														
~~		flw					vnd															
~~		pnt					ptl															
~~		rcl					tlk															
~~		pau					chk															
~~		cht					jmp															
~~		prt (deprecated in VTank)														
~~ }																					

STATE: {Default} ~~ {
	IF:	BlockE D6990000
		DO:	DoAll
				ChatExpr {\/t +getcharstringprop[1]+`,Select the Number next to the Crystal you want and press Go.`}
				SetState {DefineItems}
	IF:	Always
		DO:	EmbedNav nav0 {[none]}
	IF:	Always
		DO:	DoAll
				SetOpt {EnableCombat} {False}
				SetOpt {OpenDoors} {True}
	IF:	Always
		DO:	SetState {ToTN}
~~ }
STATE: {DefineItems} ~~ {
	IF:	Always
		DO:	CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="350" height="303" title="LumKits"><control type="layout"><control type="button" name="Healing Kit" left="0" top="0" width="149" height="60" text="Healing Kit" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]"/><control type="button" name="1" left="150" top="0" width="29" height="29" text="1" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,1]"/><control type="button" name="2" left="180" top="0" width="29" height="29" text="2" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,2]"/><control type="button" name="3" left="210" top="0" width="29" height="29" text="3" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,3]"/><control type="button" name="4" left="240" top="0" width="29" height="29" text="4" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,4]"/><control type="button" name="5" left="270" top="0" width="29" height="29" text="5" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,5]"/><control type="button" name="6" left="150" top="30" width="29" height="29" text="6" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,6]"/><control type="button" name="7" left="180" top="30" width="29" height="29" text="7" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,7]"/><control type="button" name="8" left="210" top="30" width="29" height="29" text="8" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,8]"/><control type="button" name="9" left="240" top="30" width="29" height="29" text="9" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,9]"/><control type="button" name="10" left="270" top="30" width="29" height="29" text="10" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,10]"/><control type="button" name="All" left="300" top="0" width="49" height="59" text="All" actionexpr="setvar[ItemOne,Token of the Light Infused Healing Kit]&amp;&amp;setvar[ItemOneCount,All]"/><control type="button" name="Vitality" left="0" top="61" width="149" height="60" text="Vitality" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]"/><control type="button" name="1" left="150" top="61" width="29" height="29" text="1" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,1]"/><control type="button" name="2" left="180" top="61" width="29" height="29" text="2" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,2]"/><control type="button" name="3" left="210" top="61" width="29" height="29" text="3" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,3]"/><control type="button" name="4" left="240" top="61" width="29" height="29" text="4" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,4]"/><control type="button" name="5" left="270" top="61" width="29" height="29" text="5" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,5]"/><control type="button" name="6" left="150" top="91" width="29" height="29" text="6" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,6]"/><control type="button" name="7" left="180" top="91" width="29" height="29" text="7" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,7]"/><control type="button" name="8" left="210" top="91" width="29" height="29" text="8" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,8]"/><control type="button" name="9" left="240" top="91" width="29" height="29" text="9" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,9]"/><control type="button" name="10" left="270" top="91" width="29" height="29" text="10" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,10]"/><control type="button" name="All" left="300" top="61" width="49" height="59" text="All" actionexpr="setvar[ItemTwo,Token of the Luminous Crystal of Vitality]&amp;&amp;setvar[ItemTwoCount,All]"/><control type="button" name="Damage" left="0" top="122" width="149" height="60" text="Damage" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]"/><control type="button" name="1" left="150" top="122" width="29" height="29" text="1" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,1]"/><control type="button" name="2" left="180" top="122" width="29" height="29" text="2" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,2]"/><control type="button" name="3" left="210" top="122" width="29" height="29" text="3" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,3]"/><control type="button" name="4" left="240" top="122" width="29" height="29" text="4" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,4]"/><control type="button" name="5" left="270" top="122" width="29" height="29" text="5" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,5]"/><control type="button" name="6" left="150" top="152" width="29" height="29" text="6" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,6]"/><control type="button" name="7" left="180" top="152" width="29" height="29" text="7" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,7]"/><control type="button" name="8" left="210" top="152" width="29" height="29" text="8" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,8]"/><control type="button" name="9" left="240" top="152" width="29" height="29" text="9" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,9]"/><control type="button" name="10" left="270" top="152" width="29" height="29" text="10" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,10]"/><control type="button" name="All" left="300" top="122" width="49" height="59" text="All" actionexpr="setvar[ItemThree,Token of Rare Armor Damage Boost V]&amp;&amp;setvar[ItemThreeCount,All]"/><control type="button" name="Reduction" left="0" top="183" width="149" height="60" text="Reduction" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]"/><control type="button" name="1" left="150" top="183" width="29" height="29" text="1" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,1]"/><control type="button" name="2" left="180" top="183" width="29" height="29" text="2" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,2]"/><control type="button" name="3" left="210" top="183" width="29" height="29" text="3" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,3]"/><control type="button" name="4" left="240" top="183" width="29" height="29" text="4" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,4]"/><control type="button" name="5" left="270" top="183" width="29" height="29" text="5" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,5]"/><control type="button" name="6" left="150" top="213" width="29" height="29" text="6" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,6]"/><control type="button" name="7" left="180" top="213" width="29" height="29" text="7" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,7]"/><control type="button" name="8" left="210" top="213" width="29" height="29" text="8" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,8]"/><control type="button" name="9" left="240" top="213" width="29" height="29" text="9" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,9]"/><control type="button" name="10" left="270" top="213" width="29" height="29" text="10" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,10]"/><control type="button" name="All" left="300" top="183" width="49" height="59" text="All" actionexpr="setvar[ItemFour,Token of Rare Damage Reduction V]&amp;&amp;setvar[ItemFourCount,All]"/><control type="button" name="All" left="0" top="243" width="349" height="59" text="Go" actionexpr="setvar[Go,1]"/></control></view>}
	IF:	Expr {getvar[Go]==1}
		DO:	SetState {ItemMath}
~~ }
STATE: {Finished} ~~ {
	IF:	Always
		DO:	DoAll
				CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="150" height="50" title="Reset"><control type="layout"><control type="button" name="Restart" left="0" top="0" width="149" height="49" text="Restart" setstate="Default" /></control></view>}
				DoExpr {clearallvars[]}
	IF:	Always
		DO:	Chat {I'm Done}
~~ }
STATE: {GoToAsheronCastle} ~~ {
	IF:	Always
		DO:	CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="150" height="50" title="test"><control type="layout"><control type="button" name="STOP" left="0" top="0" width="149" height="49" text="STOP" setstate="Finished" /></control></view>}
	IF:	Always
		DO:	SetOpt {EnableCombat} {False}
	IF:	CellE F6820033
		DO:	EmbedNav nav1 {[none]}
	IF:	CellE 00070145
		DO:	EmbedNav nav2 {[none]}
	IF:	CellE CE940035
		DO:	EmbedNav nav3 {[none]}
	IF:	CellE D6930005
		DO:	EmbedNav nav4 {[none]}
	IF:	CellE D59A0039
		DO:	EmbedNav nav5 {[none]}
	IF:	NavEmpty
		DO:	DoAll
				ChatExpr {\/t +getcharstringprop[1]+`,Select the Number next to the Crystal you want and press Go.`}
				SetState {DefineItems}
~~ }
STATE: {ItemMath} ~~ {
	IF:	Always
		DO:	CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="150" height="50" title="test"><control type="layout"><control type="button" name="STOP" left="0" top="0" width="149" height="49" text="STOP" setstate="Finished" /></control></view>}
	IF:	All
			Not Expr {getcharskill_traininglevel[21]>2}
			Expr {getobjectinternaltype[getvar[ItemOne]]==3}
		DO:	DoAll
				ChatExpr {\/t +getcharstringprop[1]+`,You tried to pick up healing kits without healing trained.`}
				SetState {Finished}
	IF:	All
			All
				Expr {getcharskill_traininglevel[21]>2}
				Expr {getobjectinternaltype[getvar[ItemOne]]==3}
				Expr {getvar[ItemOneCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				Expr {getvar[ItemTwoCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				Expr {getvar[ItemThreeCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				Expr {getvar[ItemFourCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemOneCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/4],`N0`]]]}
				DoExpr {setvar[ItemTwoCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/4],`N0`]]]}
				DoExpr {setvar[ItemThreeCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/4],`N0`]]]}
				DoExpr {setvar[ItemFourCount,cnumber[cnumber[cstrf[floor[(getcharquadprop[6]/10000)/4],`N0`]]]]}
				SetState {PickUpQueue}
	IF:	All
			All
				Expr {getcharskill_traininglevel[21]>2}
				Expr {getobjectinternaltype[getvar[ItemOne]]==3}
				Expr {getvar[ItemOneCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				Expr {getvar[ItemTwoCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				Expr {getvar[ItemThreeCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				Expr {getvar[ItemFourCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemOneCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				DoExpr {setvar[ItemTwoCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				DoExpr {setvar[ItemThreeCount,cnumber[cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]]}
				DoExpr {setvar[ItemFourCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				SetState {PickUpQueue}
	IF:	All
			All
				Expr {getcharskill_traininglevel[21]>2}
				Expr {getobjectinternaltype[getvar[ItemOne]]==3}
				Expr {getvar[ItemOneCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				Expr {getvar[ItemThreeCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				Expr {getvar[ItemFourCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemOneCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				DoExpr {setvar[ItemThreeCount,cnumber[cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]]}
				DoExpr {setvar[ItemFourCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				SetState {PickUpQueue}
	IF:	All
			All
				Expr {getcharskill_traininglevel[21]>2}
				Expr {getobjectinternaltype[getvar[ItemOne]]==3}
				Expr {getvar[ItemOneCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				Expr {getvar[ItemTwoCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				Expr {getvar[ItemFourCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemOneCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				DoExpr {setvar[ItemTwoCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				DoExpr {setvar[ItemFourCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				SetState {PickUpQueue}
	IF:	All
			All
				Expr {getcharskill_traininglevel[21]>2}
				Expr {getobjectinternaltype[getvar[ItemOne]]==3}
				Expr {getvar[ItemOneCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				Expr {getvar[ItemTwoCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				Expr {getvar[ItemThreeCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemOneCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				DoExpr {setvar[ItemTwoCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				DoExpr {setvar[ItemThreeCount,cnumber[cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]]}
				SetState {PickUpQueue}
	IF:	All
			All
				Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				Expr {getvar[ItemTwoCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				Expr {getvar[ItemThreeCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				Expr {getvar[ItemFourCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemTwoCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				DoExpr {setvar[ItemThreeCount,cnumber[cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]]}
				DoExpr {setvar[ItemFourCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/3],`N0`]]]}
				SetState {PickUpQueue}
	IF:	All
			All
				Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				Expr {getvar[ItemTwoCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				Expr {getvar[ItemThreeCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemTwoCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/2],`N0`]]]}
				DoExpr {setvar[ItemThreeCount,cnumber[cnumber[cstrf[floor[(getcharquadprop[6]/10000)/2],`N0`]]]]}
				SetState {PickUpQueue}
	IF:	All
			All
				Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				Expr {getvar[ItemTwoCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				Expr {getvar[ItemFourCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemTwoCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/2],`N0`]]]}
				DoExpr {setvar[ItemFourCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/2],`N0`]]]}
				SetState {PickUpQueue}

	IF:	All
			All
				Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				Expr {getvar[ItemThreeCount]==All}
			All
				Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				Expr {getvar[ItemFourCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemThreeCount,cnumber[cnumber[cstrf[floor[(getcharquadprop[6]/10000)/2],`N0`]]]]}
				DoExpr {setvar[ItemFourCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)/2],`N0`]]]}
				SetState {PickUpQueue}
	IF:	All
			Expr {getcharskill_traininglevel[21]>2}
			Expr {getobjectinternaltype[getvar[ItemOne]]==3}
			Expr {getvar[ItemOneCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemOneCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)],`N0`]]]}
				SetState {PickUpQueue}
	IF: All
			Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
			Expr {getvar[ItemTwoCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemTwoCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)],`N0`]]]}
				SetState {PickUpQueue}
	IF: All
			Expr {getobjectinternaltype[getvar[ItemThree]]==3}
			Expr {getvar[ItemThreeCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemThreeCount,cnumber[cnumber[cstrf[floor[(getcharquadprop[6]/10000)],`N0`]]]]}
				SetState {PickUpQueue}
	IF: All
			Expr {getobjectinternaltype[getvar[ItemFour]]==3}
			Expr {getvar[ItemFourCount]==All}
		DO:	DoAll
				DoExpr {setvar[ItemFourCount,cnumber[cstrf[floor[(getcharquadprop[6]/10000)],`N0`]]]}
				SetState {PickUpQueue}
	IF:	All
			Expr {getcharskill_traininglevel[21]>2}
			Expr {getobjectinternaltype[getvar[ItemOne]]==3}
			Expr {getobjectinternaltype[getvar[ItemOneCount]]==1}
		DO:	SetState {PickUpQueue}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
			Expr {getobjectinternaltype[getvar[ItemTwoCount]]==1}
		DO:	SetState {PickUpQueue}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemThree]]==3}
			Expr {getobjectinternaltype[getvar[ItemThreeCount]]==1}
		DO:	SetState {PickUpQueue}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemFour]]==3}
			Expr {getobjectinternaltype[getvar[ItemFourCount]]==1}
		DO:	SetState {PickUpQueue}
~~ }
STATE: {NalicanaQueue} ~~ {
	IF:	Always
		DO:	CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="150" height="50" title="test"><control type="layout"><control type="button" name="STOP" left="0" top="0" width="149" height="49" text="STOP" setstate="Finished" /></control></view>}
	IF:	All
			Any
				Not Expr {getobjectinternaltype[getvar[ItemOne]]==3}
				Not Expr {getcharskill_traininglevel[21]>2}
				All
					Expr {getcharskill_traininglevel[21]>2}
					Expr {getobjectinternaltype[getvar[ItemOne]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemOne]]==0}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemTwo]]==0}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemThree]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemThree]]==0}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemFour]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemFour]]==0}
		DO:	SetState {Finished}
	IF:	All
			Expr {getcharskill_traininglevel[21]>2}
			Expr {getobjectinternaltype[getvar[ItemOne]]==3}
			Expr {getobjectinternaltype[getvar[ItemOneCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemOne]]>=getvar[ItemOneCount]}
		DO:	DoAll
				DoExpr {setvar[TokenVar,getvar[ItemOne]]}
				DoExpr {setvar[TokenCount,getvar[ItemOneCount]]}
				SetState {TurnInToNalicana}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
			Expr {getobjectinternaltype[getvar[ItemTwoCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemTwo]]>=getvar[ItemTwoCount]}
		DO:	DoAll
				DoExpr {setvar[TokenVar,getvar[ItemTwo]]}
				DoExpr {setvar[TokenCount,getvar[ItemTwoCount]]}
				SetState {TurnInToNalicana}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemThree]]==3}
			Expr {getobjectinternaltype[getvar[ItemThreeCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemThree]]>=getvar[ItemThreeCount]}
		DO:	DoAll
				DoExpr {setvar[TokenVar,getvar[ItemThree]]}
				DoExpr {setvar[TokenCount,getvar[ItemThreeCount]]}
				SetState {TurnInToNalicana}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemFour]]==3}
			Expr {getobjectinternaltype[getvar[ItemFourCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemFour]]>=getvar[ItemFourCount]}
		DO:	DoAll
				DoExpr {setvar[TokenVar,getvar[ItemFour]]}
				DoExpr {setvar[TokenCount,getvar[ItemFourCount]]}
				SetState {TurnInToNalicana}
~~ }
STATE: {PickUpQueue} ~~ {
	IF:	Always
		DO:	CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="150" height="50" title="test"><control type="layout"><control type="button" name="STOP" left="0" top="0" width="149" height="49" text="STOP" setstate="Finished" /></control></view>}
	IF:	All
			Any
				Not Expr {getobjectinternaltype[getvar[ItemOne]]==3}
				Not Expr {getcharskill_traininglevel[21]>2}
				All
					Expr {getcharskill_traininglevel[21]>2}
					Expr {getobjectinternaltype[getvar[ItemOne]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemOne]]>=getvar[ItemOneCount]}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemTwo]]>=getvar[ItemTwoCount]}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemThree]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemThree]]>=getvar[ItemThreeCount]}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemFour]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemFour]]>=getvar[ItemFourCount]}
		DO:	SetState {NalicanaQueue}
	IF:	All
			Expr {getcharskill_traininglevel[21]>2}
			Expr {getobjectinternaltype[getvar[ItemOne]]==3}
			Expr {getobjectinternaltype[getvar[ItemOneCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemOne]]<getvar[ItemOneCount]}
		DO:	SetState {TryPickup}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
			Expr {getobjectinternaltype[getvar[ItemTwoCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemTwo]]<getvar[ItemTwoCount]}
		DO:	SetState {TryPickup}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemThree]]==3}
			Expr {getobjectinternaltype[getvar[ItemThreeCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemThree]]<getvar[ItemThreeCount]}
		DO:	SetState {TryPickup}
	IF:	All
			Expr {getobjectinternaltype[getvar[ItemFour]]==3}
			Expr {getobjectinternaltype[getvar[ItemFourCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemFour]]<getvar[ItemFourCount]}
		DO:	SetState {TryPickup}
~~ }
STATE: {ToTN} ~~ {
	IF:	Always
		DO:	CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="150" height="50" title="test"><control type="layout"><control type="button" name="STOP" left="0" top="0" width="149" height="49" text="STOP" setstate="Finished" /></control></view>}
	IF:	Always
		DO:	DoAll
				SetOpt {EnableCombat} {False}
				SetOpt {IdlePeaceMode} {False}
				SetOpt {EnableNav} {False}
	IF:	BlockE F6820000
		DO:	DoAll
				DoExpr {setvar[Recall,1]}
				SetOpt {EnableNav} {True}
				EmbedNav nav6 {[none]}
	IF:	All
			Expr {getvar[Recall]==0}
			SecsInStateGE 2
			Not BlockE F6820000
		DO:	DoAll
				DoExpr {actiontrycastbyid[2931]} ~~ SpellId 2931 is "Recall Aphus Lassel".
				SetState {ToTN}
	IF:	CellE 00070145
		DO:	DoAll
				DoExpr {clearvar[Recall]}
				SetOpt {EnableNav} {True}
				SetState {GoToAsheronCastle}
~~ }
STATE: {TryPickup} ~~ {
	IF:	Always
		DO:	CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="150" height="50" title="test"><control type="layout"><control type="button" name="STOP" left="0" top="0" width="149" height="49" text="STOP" setstate="Finished" /></control></view>}
	IF:	Always
		DO:	DoAll
				EmbedNav nav7 {[none]}
				SetOpt {IdlePeaceMode} {True}
	IF:	All
			Any
				Not Expr {getobjectinternaltype[getvar[ItemOne]]==3}
				Not Expr {getcharskill_traininglevel[21]>2}
				All
					Expr {getcharskill_traininglevel[21]>2}
					Expr {getobjectinternaltype[getvar[ItemOne]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemOne]]>=getvar[ItemOneCount]}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemTwo]]>=getvar[ItemTwoCount]}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemThree]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemThree]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemThree]]>=getvar[ItemThreeCount]}
			Any
				Not Expr {getobjectinternaltype[getvar[ItemFour]]==3}
				All
					Expr {getobjectinternaltype[getvar[ItemFour]]==3}
					Expr {getitemcountininventorybyname[getvar[ItemFour]]>=getvar[ItemFourCount]}
		DO:	DoAll
				DoExpr {clearvar[LootItem]}
				DoExpr {clearvar[wobj]}
				DoExpr {clearvar[LootCount]}
				SetOpt {IdlePeaceMode} {False}
				SetState {PickUpQueue}
	IF:	All
			Expr {getbusystate[]==0}
			Expr {getcharskill_traininglevel[21]>2}
			Expr {getobjectinternaltype[getvar[ItemOne]]==3}
			Expr {getobjectinternaltype[getvar[ItemOneCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemOne]]<getvar[ItemOneCount]}
			Expr {getobjectinternaltype[wobjectfindnearestbynameandobjectclass[11,getvar[ItemOne]]]==7}
		DO:	DoAll
				DoExpr {actiontryuseitem[wobjectfindnearestbynameandobjectclass[11,getvar[ItemOne]]]}
				SetState {TryPickup}
	IF:	All
			Expr {getbusystate[]==0}
			Expr {getobjectinternaltype[getvar[ItemTwo]]==3}
			Expr {getobjectinternaltype[getvar[ItemTwoCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemTwo]]<getvar[ItemTwoCount]}
			Expr {getobjectinternaltype[wobjectfindnearestbynameandobjectclass[11,getvar[ItemTwo]]]==7}
		DO:	DoAll
				DoExpr {actiontryuseitem[wobjectfindnearestbynameandobjectclass[11,getvar[ItemTwo]]]}
				SetState {TryPickup}
	IF:	All
			Expr {getbusystate[]==0}
			Expr {getobjectinternaltype[getvar[ItemThree]]==3}
			Expr {getobjectinternaltype[getvar[ItemThreeCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemThree]]<getvar[ItemThreeCount]}
			Expr {getobjectinternaltype[wobjectfindnearestbynameandobjectclass[11,getvar[ItemThree]]]==7}
		DO:	DoAll
				DoExpr {actiontryuseitem[wobjectfindnearestbynameandobjectclass[11,getvar[ItemThree]]]}
				SetState {TryPickup}
	IF:	All
			Expr {getbusystate[]==0}
			Expr {getobjectinternaltype[getvar[ItemFour]]==3}
			Expr {getobjectinternaltype[getvar[ItemFourCount]]==1}
			Expr {getitemcountininventorybyname[getvar[ItemFour]]<getvar[ItemFourCount]}
			Expr {getobjectinternaltype[wobjectfindnearestbynameandobjectclass[11,getvar[ItemFour]]]==7}
		DO:	DoAll
				DoExpr {actiontryuseitem[wobjectfindnearestbynameandobjectclass[11,getvar[ItemFour]]]}
				SetState {TryPickup}
~~ }
STATE: {TurnInToNalicana} ~~ {
	IF:	Always
		DO:	CreateView {PickUpCountButton} {<?xml version="1.0"?><view width="150" height="50" title="test"><control type="layout"><control type="button" name="STOP" left="0" top="0" width="149" height="49" text="STOP" setstate="Finished" /></control></view>}
	IF:	ChatMatch {Nalicana tells you, "You do not have enough}
		DO:	SetState {Finished}
	IF:	Expr {getitemcountininventorybyname[getvar[TokenVar]]==0}
		DO:	SetState {NalicanaQueue}
	IF:	Always
		DO:	Chat {/ub prepclick yes 5}
	IF:	All
			BlockE D6990000
			Expr {getitemcountininventorybyname[getvar[TokenVar]]>0}
			SecsInStateGE 3
		DO:	DoAll
				DoExpr {actiontrygiveitem[wobjectfindininventorybyname[getvar[TokenVar]],wobjectfindnearestbynameandobjectclass[37,Nalicana]]}
				Chat {/ub prepclick yes 5}
				SetState {TurnInToNalicana}
	IF:	SecsInStateGE 6
		DO:	SetState {TurnInToNalicana}
~~ }

~~========================= ONLY NAVS APPEAR BELOW THIS LINE =========================~~

NAV: nav0 once ~~ {
~~ }
NAV: nav1 once ~~ {
	pnt 95.4570833206177 2.25772916475932 0.24168750445048
	pnt 95.4591268539429 2.29207809766134 0.24168750445048
	ptl -101.456293741862 -96.6840629577637 2.08333134651184E-05 95.4555708567301 2.31398749351501 0.242491692304611 14 {Portal to Town Network}
	pau 95.4570833206177 2.25772916475932 0.24168750445048 3000
~~ }
NAV: nav2 once ~~ {
	pnt -101.658333333333 -96.6833333333333 2.08333134651184E-05
	pnt -101.681492265066 -96.6692961057027 2.08333134651184E-05
	pnt -101.699083630244 -96.6444360415141 2.08333134651184E-05
	pnt -101.695770549774 -96.6287383715312 2.08333134651184E-05
	pnt -101.681235090892 -96.6156532923381 2.08333134651184E-05
	pnt -101.658632628123 -96.5965938091278 2.08333134651184E-05
	pnt -101.656640942891 -96.5806862831116 2.08333134651184E-05
	pnt -101.659451961517 -96.5508709112803 2.08333134651184E-05
	pnt -101.65658493042 -96.5262804349263 2.08333134651184E-05
	pnt -101.658193079631 -96.5147299766541 2.08333134651184E-05
	pnt -101.656674702962 -96.4778756380081 2.08333134651184E-05
	pnt -101.652314917247 -96.4519638299942 2.08333134651184E-05
	pnt -101.620254166921 -96.4387101173401 2.08333134651184E-05
	pnt -101.612362543742 -96.4362512509028 2.08333134651184E-05
	pnt -101.605762545268 -96.4337610324224 2.08333134651184E-05
	ptl 63.4793874740601 16.9192083358765 0.072571873664856 -101.5896220843 -96.4334579149882 -0.000262499845121056 14 {Eastham Portal}
	pau 63.4793874740601 16.9192083358765 0.072571873664856 5000
~~ }
NAV: nav3 once ~~ {
	pnt 63.4793874740601 16.9192083358765 0.072571873664856
	pnt 63.5660069783529 17.0330969492594 0.0820202509562174
	pnt 63.6502287546794 17.1602971394857 0.0750208298365275
	pnt 63.7463197072347 17.2909065405528 0.0750208298365275
	pnt 63.8570995012919 17.5011856714884 0.0744292100270589
	pnt 63.9646187464396 17.6897624015808 0.0700010299682617
	pnt 63.9859025637309 17.7138182640076 0.0720056851704915
	pnt 63.9998728116353 17.754200108846 0.0791769027709961
	pnt 64.0696022987366 17.8372292200724 0.0833541631698608
	pnt 64.1424462000529 17.8417098999023 0.0833541631698608
	pnt 64.2172452290853 17.8498764038086 0.0833541631698608
	pnt 64.3173050562541 17.8558320999146 0.0833541631698608
	pnt 64.3152377446493 17.8622054417928 0.0833541631698608
	ptl 64.3152377446493 17.8622054417928 0.0833541631698608 64.3230124791463 17.8632041931152 0.0830708369612694 14 {Asheron's Island}
	pau 64.3152377446493 17.8622054417928 0.0833541631698608 5000
~~ }
NAV: nav4 once ~~ {
	pnt 69.3268124977748 16.1235166549683 -0.000395833204189936
	pnt 69.3262291669846 16.1562305450439 -0.000395833204189936
	pnt 69.3338523308436 16.2042320887248 -0.000395833204189936
	ptl 69.3338523308436 16.2042320887248 -0.000395833204189936 69.3341316699982 16.2035083134969 -0.00013802082685288 14 {Asheron's Castle}
	pau 69.3338523308436 16.2042320887248 -0.000395833204189936 5000
~~ }
NAV: nav5 once ~~ {
	pnt 69.1872355779012 21.2564720183611 1.55565745035807
	chk 69.1872355779012 21.2564720183611 1.55565745035807
	pnt 69.1877990722656 21.2455799738566 1.55835418701172
	chk 69.1877990722656 21.2455799738566 1.55835418701172
	pnt 69.1877990722656 21.2455799738566 1.55835418701172
	pnt 69.1881544748942 21.2379988352458 1.55835418701172
	pnt 69.1885098775228 21.2304177602132 1.55835418701172
	pnt 69.1889693578084 21.2206169128418 1.55835418701172
	pnt 69.1984149932861 21.2179625193278 1.55835418701172
	pnt 69.2031427383423 21.2093669891357 1.55835418701172
	pnt 69.2016712824504 21.2019232432048 1.55835418701172
	pnt 69.1950756708781 21.1947107315063 1.55835418701172
	pnt 69.1886162439982 21.1874484380086 1.55835418701172
	pnt 69.1880009333293 21.1805400848389 1.55835418701172
	chk 69.1880009333293 21.1805400848389 1.55835418701172
	pnt 69.1879903793335 21.1736307779948 1.55835418701172
	chk 69.1879903793335 21.1736307779948 1.55835418701172
	pnt 69.1879788080851 21.1660413106283 1.55835418701172
	chk 69.1879788080851 21.1660413106283 1.55835418701172
	pnt 69.1879673639933 21.1585315068563 1.55835418701172
	pnt 69.1911163330078 21.1427945454915 1.55835418701172
	pnt 69.1972995122274 21.1223646799723 1.55835418701172
	pnt 69.2003054300944 21.119225692749 1.55835418701172
	pnt 69.2173936208089 21.1015575408936 1.55835418701172
	pnt 69.230543645223 21.0850419362386 1.55835418701172
	pnt 69.2468541463216 21.062647374471 1.55835418701172
	pnt 69.258275004228 21.0424830754598 1.55835418701172
	pnt 69.2695739467939 21.0300018310547 1.55835418701172
	pnt 69.2726721982161 21.0279975891113 1.55835418701172
~~ }
NAV: nav6 once ~~ {
	pnt 95.4570833206177 2.25772916475932 0.24168750445048
	pnt 95.4591268539429 2.29207809766134 0.24168750445048
	ptl -101.456293741862 -96.6840629577637 2.08333134651184E-05 95.4555708567301 2.31398749351501 0.242491692304611 14 {Portal to Town Network}
	pau 95.4570833206177 2.25772916475932 0.24168750445048 3000
~~ }
NAV: nav7 once ~~ {
~~ }
